// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeEksAnywhereSubscriptionInput  {
    /// <p>The ID of the subscription.</p>
    pub id: ::std::option::Option<::std::string::String>,
}
impl  DescribeEksAnywhereSubscriptionInput  {
    /// <p>The ID of the subscription.</p>
    pub fn id(&self) -> ::std::option::Option<& str> {
        self.id.as_deref()
    }
}
impl DescribeEksAnywhereSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`DescribeEksAnywhereSubscriptionInput`](crate::operation::describe_eks_anywhere_subscription::DescribeEksAnywhereSubscriptionInput).
    pub fn builder() -> crate::operation::describe_eks_anywhere_subscription::builders::DescribeEksAnywhereSubscriptionInputBuilder {
        crate::operation::describe_eks_anywhere_subscription::builders::DescribeEksAnywhereSubscriptionInputBuilder::default()
    }
}

/// A builder for [`DescribeEksAnywhereSubscriptionInput`](crate::operation::describe_eks_anywhere_subscription::DescribeEksAnywhereSubscriptionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeEksAnywhereSubscriptionInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl DescribeEksAnywhereSubscriptionInputBuilder {
    /// <p>The ID of the subscription.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the subscription.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    /// <p>The ID of the subscription.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`DescribeEksAnywhereSubscriptionInput`](crate::operation::describe_eks_anywhere_subscription::DescribeEksAnywhereSubscriptionInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::describe_eks_anywhere_subscription::DescribeEksAnywhereSubscriptionInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::describe_eks_anywhere_subscription::DescribeEksAnywhereSubscriptionInput {
                id: self.id
                ,
            }
        )
    }
}

