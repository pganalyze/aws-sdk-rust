// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateEksAnywhereSubscriptionInput  {
    /// <p></p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>A boolean indicating whether or not to automatically renew the subscription.</p>
    pub auto_renew: ::std::option::Option<bool>,
    /// <p>Unique, case-sensitive identifier to ensure the idempotency of the request.</p>
    pub client_request_token: ::std::option::Option<::std::string::String>,
}
impl  UpdateEksAnywhereSubscriptionInput  {
    /// <p></p>
    pub fn id(&self) -> ::std::option::Option<& str> {
        self.id.as_deref()
    }
    /// <p>A boolean indicating whether or not to automatically renew the subscription.</p>
    pub fn auto_renew(&self) -> ::std::option::Option<bool> {
        self.auto_renew
    }
    /// <p>Unique, case-sensitive identifier to ensure the idempotency of the request.</p>
    pub fn client_request_token(&self) -> ::std::option::Option<& str> {
        self.client_request_token.as_deref()
    }
}
impl UpdateEksAnywhereSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`UpdateEksAnywhereSubscriptionInput`](crate::operation::update_eks_anywhere_subscription::UpdateEksAnywhereSubscriptionInput).
    pub fn builder() -> crate::operation::update_eks_anywhere_subscription::builders::UpdateEksAnywhereSubscriptionInputBuilder {
        crate::operation::update_eks_anywhere_subscription::builders::UpdateEksAnywhereSubscriptionInputBuilder::default()
    }
}

/// A builder for [`UpdateEksAnywhereSubscriptionInput`](crate::operation::update_eks_anywhere_subscription::UpdateEksAnywhereSubscriptionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateEksAnywhereSubscriptionInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) auto_renew: ::std::option::Option<bool>,
    pub(crate) client_request_token: ::std::option::Option<::std::string::String>,
}
impl UpdateEksAnywhereSubscriptionInputBuilder {
    /// <p></p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    /// <p></p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>A boolean indicating whether or not to automatically renew the subscription.</p>
    /// This field is required.
    pub fn auto_renew(mut self, input: bool) -> Self {
        self.auto_renew = ::std::option::Option::Some(input);
        self
    }
    /// <p>A boolean indicating whether or not to automatically renew the subscription.</p>
    pub fn set_auto_renew(mut self, input: ::std::option::Option<bool>) -> Self {
        self.auto_renew = input; self
    }
    /// <p>A boolean indicating whether or not to automatically renew the subscription.</p>
    pub fn get_auto_renew(&self) -> &::std::option::Option<bool> {
        &self.auto_renew
    }
    /// <p>Unique, case-sensitive identifier to ensure the idempotency of the request.</p>
    pub fn client_request_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_request_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier to ensure the idempotency of the request.</p>
    pub fn set_client_request_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_request_token = input; self
    }
    /// <p>Unique, case-sensitive identifier to ensure the idempotency of the request.</p>
    pub fn get_client_request_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_request_token
    }
    /// Consumes the builder and constructs a [`UpdateEksAnywhereSubscriptionInput`](crate::operation::update_eks_anywhere_subscription::UpdateEksAnywhereSubscriptionInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::update_eks_anywhere_subscription::UpdateEksAnywhereSubscriptionInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::update_eks_anywhere_subscription::UpdateEksAnywhereSubscriptionInput {
                id: self.id
                ,
                auto_renew: self.auto_renew
                ,
                client_request_token: self.client_request_token
                ,
            }
        )
    }
}

