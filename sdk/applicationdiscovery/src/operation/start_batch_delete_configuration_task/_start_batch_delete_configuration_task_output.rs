// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartBatchDeleteConfigurationTaskOutput  {
    /// <p> The unique identifier associated with the newly started deletion task. </p>
    pub task_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl  StartBatchDeleteConfigurationTaskOutput  {
    /// <p> The unique identifier associated with the newly started deletion task. </p>
    pub fn task_id(&self) -> ::std::option::Option<& str> {
        self.task_id.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for StartBatchDeleteConfigurationTaskOutput {
                                fn request_id(&self) -> Option<&str> {
                                    self._request_id.as_deref()
                                }
                            }
impl StartBatchDeleteConfigurationTaskOutput {
    /// Creates a new builder-style object to manufacture [`StartBatchDeleteConfigurationTaskOutput`](crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskOutput).
    pub fn builder() -> crate::operation::start_batch_delete_configuration_task::builders::StartBatchDeleteConfigurationTaskOutputBuilder {
        crate::operation::start_batch_delete_configuration_task::builders::StartBatchDeleteConfigurationTaskOutputBuilder::default()
    }
}

/// A builder for [`StartBatchDeleteConfigurationTaskOutput`](crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartBatchDeleteConfigurationTaskOutputBuilder {
    pub(crate) task_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl StartBatchDeleteConfigurationTaskOutputBuilder {
    /// <p> The unique identifier associated with the newly started deletion task. </p>
    pub fn task_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The unique identifier associated with the newly started deletion task. </p>
    pub fn set_task_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_id = input; self
    }
    /// <p> The unique identifier associated with the newly started deletion task. </p>
    pub fn get_task_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                    self._request_id = Some(request_id.into());
                                    self
                                }
    
                                pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                    self._request_id = request_id;
                                    self
                                }
    /// Consumes the builder and constructs a [`StartBatchDeleteConfigurationTaskOutput`](crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskOutput).
    pub fn build(self) -> crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskOutput {
        crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskOutput {
            task_id: self.task_id
            ,
            _request_id: self._request_id,
        }
    }
}

