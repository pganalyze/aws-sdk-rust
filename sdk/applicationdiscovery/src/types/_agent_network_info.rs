// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Network details about the host where the agent/collector resides.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AgentNetworkInfo  {
    /// <p>The IP address for the host where the agent/collector resides.</p>
    pub ip_address: ::std::option::Option<::std::string::String>,
    /// <p>The MAC address for the host where the agent/collector resides.</p>
    pub mac_address: ::std::option::Option<::std::string::String>,
}
impl  AgentNetworkInfo  {
    /// <p>The IP address for the host where the agent/collector resides.</p>
    pub fn ip_address(&self) -> ::std::option::Option<& str> {
        self.ip_address.as_deref()
    }
    /// <p>The MAC address for the host where the agent/collector resides.</p>
    pub fn mac_address(&self) -> ::std::option::Option<& str> {
        self.mac_address.as_deref()
    }
}
impl  ::std::fmt::Debug for AgentNetworkInfo  {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentNetworkInfo");
        formatter.field("ip_address", &"*** Sensitive Data Redacted ***");
        formatter.field("mac_address", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AgentNetworkInfo {
    /// Creates a new builder-style object to manufacture [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
    pub fn builder() -> crate::types::builders::AgentNetworkInfoBuilder {
        crate::types::builders::AgentNetworkInfoBuilder::default()
    }
}

/// A builder for [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct AgentNetworkInfoBuilder {
    pub(crate) ip_address: ::std::option::Option<::std::string::String>,
    pub(crate) mac_address: ::std::option::Option<::std::string::String>,
}
impl AgentNetworkInfoBuilder {
    /// <p>The IP address for the host where the agent/collector resides.</p>
    pub fn ip_address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ip_address = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The IP address for the host where the agent/collector resides.</p>
    pub fn set_ip_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ip_address = input; self
    }
    /// <p>The IP address for the host where the agent/collector resides.</p>
    pub fn get_ip_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.ip_address
    }
    /// <p>The MAC address for the host where the agent/collector resides.</p>
    pub fn mac_address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mac_address = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The MAC address for the host where the agent/collector resides.</p>
    pub fn set_mac_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mac_address = input; self
    }
    /// <p>The MAC address for the host where the agent/collector resides.</p>
    pub fn get_mac_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.mac_address
    }
    /// Consumes the builder and constructs a [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
    pub fn build(self) -> crate::types::AgentNetworkInfo {
        crate::types::AgentNetworkInfo {
            ip_address: self.ip_address
            ,
            mac_address: self.mac_address
            ,
        }
    }
}
impl ::std::fmt::Debug for AgentNetworkInfoBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentNetworkInfoBuilder");
        formatter.field("ip_address", &"*** Sensitive Data Redacted ***");
        formatter.field("mac_address", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}

