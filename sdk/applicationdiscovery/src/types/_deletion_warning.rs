// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> A configuration ID paired with a warning message. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeletionWarning  {
    /// <p> The unique identifier of the configuration that produced a warning. </p>
    pub configuration_id: ::std::option::Option<::std::string::String>,
    /// <p> The integer warning code associated with the warning message. </p>
    pub warning_code: i32,
    /// <p> A descriptive message of the warning the associated configuration ID produced. </p>
    pub warning_text: ::std::option::Option<::std::string::String>,
}
impl  DeletionWarning  {
    /// <p> The unique identifier of the configuration that produced a warning. </p>
    pub fn configuration_id(&self) -> ::std::option::Option<& str> {
        self.configuration_id.as_deref()
    }
    /// <p> The integer warning code associated with the warning message. </p>
    pub fn warning_code(&self) -> i32 {
        self.warning_code
    }
    /// <p> A descriptive message of the warning the associated configuration ID produced. </p>
    pub fn warning_text(&self) -> ::std::option::Option<& str> {
        self.warning_text.as_deref()
    }
}
impl DeletionWarning {
    /// Creates a new builder-style object to manufacture [`DeletionWarning`](crate::types::DeletionWarning).
    pub fn builder() -> crate::types::builders::DeletionWarningBuilder {
        crate::types::builders::DeletionWarningBuilder::default()
    }
}

/// A builder for [`DeletionWarning`](crate::types::DeletionWarning).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeletionWarningBuilder {
    pub(crate) configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) warning_code: ::std::option::Option<i32>,
    pub(crate) warning_text: ::std::option::Option<::std::string::String>,
}
impl DeletionWarningBuilder {
    /// <p> The unique identifier of the configuration that produced a warning. </p>
    pub fn configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The unique identifier of the configuration that produced a warning. </p>
    pub fn set_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configuration_id = input; self
    }
    /// <p> The unique identifier of the configuration that produced a warning. </p>
    pub fn get_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.configuration_id
    }
    /// <p> The integer warning code associated with the warning message. </p>
    pub fn warning_code(mut self, input: i32) -> Self {
        self.warning_code = ::std::option::Option::Some(input);
        self
    }
    /// <p> The integer warning code associated with the warning message. </p>
    pub fn set_warning_code(mut self, input: ::std::option::Option<i32>) -> Self {
        self.warning_code = input; self
    }
    /// <p> The integer warning code associated with the warning message. </p>
    pub fn get_warning_code(&self) -> &::std::option::Option<i32> {
        &self.warning_code
    }
    /// <p> A descriptive message of the warning the associated configuration ID produced. </p>
    pub fn warning_text(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.warning_text = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> A descriptive message of the warning the associated configuration ID produced. </p>
    pub fn set_warning_text(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.warning_text = input; self
    }
    /// <p> A descriptive message of the warning the associated configuration ID produced. </p>
    pub fn get_warning_text(&self) -> &::std::option::Option<::std::string::String> {
        &self.warning_text
    }
    /// Consumes the builder and constructs a [`DeletionWarning`](crate::types::DeletionWarning).
    pub fn build(self) -> crate::types::DeletionWarning {
        crate::types::DeletionWarning {
            configuration_id: self.configuration_id
            ,
            warning_code: self.warning_code
                .unwrap_or_default()
            ,
            warning_text: self.warning_text
            ,
        }
    }
}

