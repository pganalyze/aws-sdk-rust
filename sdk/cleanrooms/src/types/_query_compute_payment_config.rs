// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object representing the collaboration member's payment responsibilities set by the collaboration creator for query compute costs.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueryComputePaymentConfig  {
    /// <p>Indicates whether the collaboration creator has configured the collaboration member to pay for query compute costs (<code>TRUE</code>) or has not configured the collaboration member to pay for query compute costs (<code>FALSE</code>).</p> 
    /// <p>Exactly one member can be configured to pay for query compute costs. An error is returned if the collaboration creator sets a <code>TRUE</code> value for more than one member in the collaboration. </p> 
    /// <p>If the collaboration creator hasn't specified anyone as the member paying for query compute costs, then the member who can query is the default payer. An error is returned if the collaboration creator sets a <code>FALSE</code> value for the member who can query.</p>
    pub is_responsible: bool,
}
impl  QueryComputePaymentConfig  {
    /// <p>Indicates whether the collaboration creator has configured the collaboration member to pay for query compute costs (<code>TRUE</code>) or has not configured the collaboration member to pay for query compute costs (<code>FALSE</code>).</p> 
    /// <p>Exactly one member can be configured to pay for query compute costs. An error is returned if the collaboration creator sets a <code>TRUE</code> value for more than one member in the collaboration. </p> 
    /// <p>If the collaboration creator hasn't specified anyone as the member paying for query compute costs, then the member who can query is the default payer. An error is returned if the collaboration creator sets a <code>FALSE</code> value for the member who can query.</p>
    pub fn is_responsible(&self) -> bool {
        self.is_responsible
    }
}
impl QueryComputePaymentConfig {
    /// Creates a new builder-style object to manufacture [`QueryComputePaymentConfig`](crate::types::QueryComputePaymentConfig).
    pub fn builder() -> crate::types::builders::QueryComputePaymentConfigBuilder {
        crate::types::builders::QueryComputePaymentConfigBuilder::default()
    }
}

/// A builder for [`QueryComputePaymentConfig`](crate::types::QueryComputePaymentConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct QueryComputePaymentConfigBuilder {
    pub(crate) is_responsible: ::std::option::Option<bool>,
}
impl QueryComputePaymentConfigBuilder {
    /// <p>Indicates whether the collaboration creator has configured the collaboration member to pay for query compute costs (<code>TRUE</code>) or has not configured the collaboration member to pay for query compute costs (<code>FALSE</code>).</p> 
    /// <p>Exactly one member can be configured to pay for query compute costs. An error is returned if the collaboration creator sets a <code>TRUE</code> value for more than one member in the collaboration. </p> 
    /// <p>If the collaboration creator hasn't specified anyone as the member paying for query compute costs, then the member who can query is the default payer. An error is returned if the collaboration creator sets a <code>FALSE</code> value for the member who can query.</p>
    /// This field is required.
    pub fn is_responsible(mut self, input: bool) -> Self {
        self.is_responsible = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether the collaboration creator has configured the collaboration member to pay for query compute costs (<code>TRUE</code>) or has not configured the collaboration member to pay for query compute costs (<code>FALSE</code>).</p> 
    /// <p>Exactly one member can be configured to pay for query compute costs. An error is returned if the collaboration creator sets a <code>TRUE</code> value for more than one member in the collaboration. </p> 
    /// <p>If the collaboration creator hasn't specified anyone as the member paying for query compute costs, then the member who can query is the default payer. An error is returned if the collaboration creator sets a <code>FALSE</code> value for the member who can query.</p>
    pub fn set_is_responsible(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_responsible = input; self
    }
    /// <p>Indicates whether the collaboration creator has configured the collaboration member to pay for query compute costs (<code>TRUE</code>) or has not configured the collaboration member to pay for query compute costs (<code>FALSE</code>).</p> 
    /// <p>Exactly one member can be configured to pay for query compute costs. An error is returned if the collaboration creator sets a <code>TRUE</code> value for more than one member in the collaboration. </p> 
    /// <p>If the collaboration creator hasn't specified anyone as the member paying for query compute costs, then the member who can query is the default payer. An error is returned if the collaboration creator sets a <code>FALSE</code> value for the member who can query.</p>
    pub fn get_is_responsible(&self) -> &::std::option::Option<bool> {
        &self.is_responsible
    }
    /// Consumes the builder and constructs a [`QueryComputePaymentConfig`](crate::types::QueryComputePaymentConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`is_responsible`](crate::types::builders::QueryComputePaymentConfigBuilder::is_responsible)
    pub fn build(self) -> ::std::result::Result<crate::types::QueryComputePaymentConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::types::QueryComputePaymentConfig {
                is_responsible: self.is_responsible
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("is_responsible", "is_responsible was not specified but it is required when building QueryComputePaymentConfig")
                    )?
                ,
            }
        )
    }
}

