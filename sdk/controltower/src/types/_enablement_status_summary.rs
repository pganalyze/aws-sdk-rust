// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The deployment summary of the enabled control.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnablementStatusSummary  {
    /// <p> The deployment status of the enabled control.</p> 
    /// <p>Valid values:</p> 
    /// <ul> 
    /// <li> <p> <code>SUCCEEDED</code>: The <code>enabledControl</code> configuration was deployed successfully.</p> </li> 
    /// <li> <p> <code>UNDER_CHANGE</code>: The <code>enabledControl</code> configuration is changing. </p> </li> 
    /// <li> <p> <code>FAILED</code>: The <code>enabledControl</code> configuration failed to deploy.</p> </li> 
    /// </ul>
    pub status: ::std::option::Option<crate::types::EnablementStatus>,
    /// <p>The last operation identifier for the enabled control.</p>
    pub last_operation_identifier: ::std::option::Option<::std::string::String>,
}
impl  EnablementStatusSummary  {
    /// <p> The deployment status of the enabled control.</p> 
    /// <p>Valid values:</p> 
    /// <ul> 
    /// <li> <p> <code>SUCCEEDED</code>: The <code>enabledControl</code> configuration was deployed successfully.</p> </li> 
    /// <li> <p> <code>UNDER_CHANGE</code>: The <code>enabledControl</code> configuration is changing. </p> </li> 
    /// <li> <p> <code>FAILED</code>: The <code>enabledControl</code> configuration failed to deploy.</p> </li> 
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<& crate::types::EnablementStatus> {
        self.status.as_ref()
    }
    /// <p>The last operation identifier for the enabled control.</p>
    pub fn last_operation_identifier(&self) -> ::std::option::Option<& str> {
        self.last_operation_identifier.as_deref()
    }
}
impl EnablementStatusSummary {
    /// Creates a new builder-style object to manufacture [`EnablementStatusSummary`](crate::types::EnablementStatusSummary).
    pub fn builder() -> crate::types::builders::EnablementStatusSummaryBuilder {
        crate::types::builders::EnablementStatusSummaryBuilder::default()
    }
}

/// A builder for [`EnablementStatusSummary`](crate::types::EnablementStatusSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EnablementStatusSummaryBuilder {
    pub(crate) status: ::std::option::Option<crate::types::EnablementStatus>,
    pub(crate) last_operation_identifier: ::std::option::Option<::std::string::String>,
}
impl EnablementStatusSummaryBuilder {
    /// <p> The deployment status of the enabled control.</p> 
    /// <p>Valid values:</p> 
    /// <ul> 
    /// <li> <p> <code>SUCCEEDED</code>: The <code>enabledControl</code> configuration was deployed successfully.</p> </li> 
    /// <li> <p> <code>UNDER_CHANGE</code>: The <code>enabledControl</code> configuration is changing. </p> </li> 
    /// <li> <p> <code>FAILED</code>: The <code>enabledControl</code> configuration failed to deploy.</p> </li> 
    /// </ul>
    pub fn status(mut self, input: crate::types::EnablementStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p> The deployment status of the enabled control.</p> 
    /// <p>Valid values:</p> 
    /// <ul> 
    /// <li> <p> <code>SUCCEEDED</code>: The <code>enabledControl</code> configuration was deployed successfully.</p> </li> 
    /// <li> <p> <code>UNDER_CHANGE</code>: The <code>enabledControl</code> configuration is changing. </p> </li> 
    /// <li> <p> <code>FAILED</code>: The <code>enabledControl</code> configuration failed to deploy.</p> </li> 
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::EnablementStatus>) -> Self {
        self.status = input; self
    }
    /// <p> The deployment status of the enabled control.</p> 
    /// <p>Valid values:</p> 
    /// <ul> 
    /// <li> <p> <code>SUCCEEDED</code>: The <code>enabledControl</code> configuration was deployed successfully.</p> </li> 
    /// <li> <p> <code>UNDER_CHANGE</code>: The <code>enabledControl</code> configuration is changing. </p> </li> 
    /// <li> <p> <code>FAILED</code>: The <code>enabledControl</code> configuration failed to deploy.</p> </li> 
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::EnablementStatus> {
        &self.status
    }
    /// <p>The last operation identifier for the enabled control.</p>
    pub fn last_operation_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_operation_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The last operation identifier for the enabled control.</p>
    pub fn set_last_operation_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_operation_identifier = input; self
    }
    /// <p>The last operation identifier for the enabled control.</p>
    pub fn get_last_operation_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_operation_identifier
    }
    /// Consumes the builder and constructs a [`EnablementStatusSummary`](crate::types::EnablementStatusSummary).
    pub fn build(self) -> crate::types::EnablementStatusSummary {
        crate::types::EnablementStatusSummary {
            status: self.status
            ,
            last_operation_identifier: self.last_operation_identifier
            ,
        }
    }
}

