// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Output Locking Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutputLockingSettings  {
    /// Epoch Locking Settings
    pub epoch_locking_settings: ::std::option::Option<crate::types::EpochLockingSettings>,
    /// Pipeline Locking Settings
    pub pipeline_locking_settings: ::std::option::Option<crate::types::PipelineLockingSettings>,
}
impl  OutputLockingSettings  {
    /// Epoch Locking Settings
    pub fn epoch_locking_settings(&self) -> ::std::option::Option<& crate::types::EpochLockingSettings> {
        self.epoch_locking_settings.as_ref()
    }
    /// Pipeline Locking Settings
    pub fn pipeline_locking_settings(&self) -> ::std::option::Option<& crate::types::PipelineLockingSettings> {
        self.pipeline_locking_settings.as_ref()
    }
}
impl OutputLockingSettings {
    /// Creates a new builder-style object to manufacture [`OutputLockingSettings`](crate::types::OutputLockingSettings).
    pub fn builder() -> crate::types::builders::OutputLockingSettingsBuilder {
        crate::types::builders::OutputLockingSettingsBuilder::default()
    }
}

/// A builder for [`OutputLockingSettings`](crate::types::OutputLockingSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OutputLockingSettingsBuilder {
    pub(crate) epoch_locking_settings: ::std::option::Option<crate::types::EpochLockingSettings>,
    pub(crate) pipeline_locking_settings: ::std::option::Option<crate::types::PipelineLockingSettings>,
}
impl OutputLockingSettingsBuilder {
    /// Epoch Locking Settings
    pub fn epoch_locking_settings(mut self, input: crate::types::EpochLockingSettings) -> Self {
        self.epoch_locking_settings = ::std::option::Option::Some(input);
        self
    }
    /// Epoch Locking Settings
    pub fn set_epoch_locking_settings(mut self, input: ::std::option::Option<crate::types::EpochLockingSettings>) -> Self {
        self.epoch_locking_settings = input; self
    }
    /// Epoch Locking Settings
    pub fn get_epoch_locking_settings(&self) -> &::std::option::Option<crate::types::EpochLockingSettings> {
        &self.epoch_locking_settings
    }
    /// Pipeline Locking Settings
    pub fn pipeline_locking_settings(mut self, input: crate::types::PipelineLockingSettings) -> Self {
        self.pipeline_locking_settings = ::std::option::Option::Some(input);
        self
    }
    /// Pipeline Locking Settings
    pub fn set_pipeline_locking_settings(mut self, input: ::std::option::Option<crate::types::PipelineLockingSettings>) -> Self {
        self.pipeline_locking_settings = input; self
    }
    /// Pipeline Locking Settings
    pub fn get_pipeline_locking_settings(&self) -> &::std::option::Option<crate::types::PipelineLockingSettings> {
        &self.pipeline_locking_settings
    }
    /// Consumes the builder and constructs a [`OutputLockingSettings`](crate::types::OutputLockingSettings).
    pub fn build(self) -> crate::types::OutputLockingSettings {
        crate::types::OutputLockingSettings {
            epoch_locking_settings: self.epoch_locking_settings
            ,
            pipeline_locking_settings: self.pipeline_locking_settings
            ,
        }
    }
}

