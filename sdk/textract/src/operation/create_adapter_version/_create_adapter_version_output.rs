// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateAdapterVersionOutput  {
    /// <p>A string containing the unique ID for the adapter that has received a new version.</p>
    pub adapter_id: ::std::option::Option<::std::string::String>,
    /// <p>A string describing the new version of the adapter.</p>
    pub adapter_version: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl  CreateAdapterVersionOutput  {
    /// <p>A string containing the unique ID for the adapter that has received a new version.</p>
    pub fn adapter_id(&self) -> ::std::option::Option<& str> {
        self.adapter_id.as_deref()
    }
    /// <p>A string describing the new version of the adapter.</p>
    pub fn adapter_version(&self) -> ::std::option::Option<& str> {
        self.adapter_version.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateAdapterVersionOutput {
                                fn request_id(&self) -> Option<&str> {
                                    self._request_id.as_deref()
                                }
                            }
impl CreateAdapterVersionOutput {
    /// Creates a new builder-style object to manufacture [`CreateAdapterVersionOutput`](crate::operation::create_adapter_version::CreateAdapterVersionOutput).
    pub fn builder() -> crate::operation::create_adapter_version::builders::CreateAdapterVersionOutputBuilder {
        crate::operation::create_adapter_version::builders::CreateAdapterVersionOutputBuilder::default()
    }
}

/// A builder for [`CreateAdapterVersionOutput`](crate::operation::create_adapter_version::CreateAdapterVersionOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateAdapterVersionOutputBuilder {
    pub(crate) adapter_id: ::std::option::Option<::std::string::String>,
    pub(crate) adapter_version: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateAdapterVersionOutputBuilder {
    /// <p>A string containing the unique ID for the adapter that has received a new version.</p>
    pub fn adapter_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.adapter_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string containing the unique ID for the adapter that has received a new version.</p>
    pub fn set_adapter_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.adapter_id = input; self
    }
    /// <p>A string containing the unique ID for the adapter that has received a new version.</p>
    pub fn get_adapter_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.adapter_id
    }
    /// <p>A string describing the new version of the adapter.</p>
    pub fn adapter_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.adapter_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string describing the new version of the adapter.</p>
    pub fn set_adapter_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.adapter_version = input; self
    }
    /// <p>A string describing the new version of the adapter.</p>
    pub fn get_adapter_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.adapter_version
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                    self._request_id = Some(request_id.into());
                                    self
                                }
    
                                pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                    self._request_id = request_id;
                                    self
                                }
    /// Consumes the builder and constructs a [`CreateAdapterVersionOutput`](crate::operation::create_adapter_version::CreateAdapterVersionOutput).
    pub fn build(self) -> crate::operation::create_adapter_version::CreateAdapterVersionOutput {
        crate::operation::create_adapter_version::CreateAdapterVersionOutput {
            adapter_id: self.adapter_id
            ,
            adapter_version: self.adapter_version
            ,
            _request_id: self._request_id,
        }
    }
}

