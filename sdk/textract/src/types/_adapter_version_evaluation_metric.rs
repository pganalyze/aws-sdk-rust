// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information on the metrics used to evalute the peformance of a given adapter version. Includes data for baseline model performance and individual adapter version perfromance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdapterVersionEvaluationMetric  {
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub baseline: ::std::option::Option<crate::types::EvaluationMetric>,
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub adapter_version: ::std::option::Option<crate::types::EvaluationMetric>,
    /// <p>Indicates the feature type being analyzed by a given adapter version.</p>
    pub feature_type: ::std::option::Option<crate::types::FeatureType>,
}
impl  AdapterVersionEvaluationMetric  {
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn baseline(&self) -> ::std::option::Option<& crate::types::EvaluationMetric> {
        self.baseline.as_ref()
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn adapter_version(&self) -> ::std::option::Option<& crate::types::EvaluationMetric> {
        self.adapter_version.as_ref()
    }
    /// <p>Indicates the feature type being analyzed by a given adapter version.</p>
    pub fn feature_type(&self) -> ::std::option::Option<& crate::types::FeatureType> {
        self.feature_type.as_ref()
    }
}
impl AdapterVersionEvaluationMetric {
    /// Creates a new builder-style object to manufacture [`AdapterVersionEvaluationMetric`](crate::types::AdapterVersionEvaluationMetric).
    pub fn builder() -> crate::types::builders::AdapterVersionEvaluationMetricBuilder {
        crate::types::builders::AdapterVersionEvaluationMetricBuilder::default()
    }
}

/// A builder for [`AdapterVersionEvaluationMetric`](crate::types::AdapterVersionEvaluationMetric).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AdapterVersionEvaluationMetricBuilder {
    pub(crate) baseline: ::std::option::Option<crate::types::EvaluationMetric>,
    pub(crate) adapter_version: ::std::option::Option<crate::types::EvaluationMetric>,
    pub(crate) feature_type: ::std::option::Option<crate::types::FeatureType>,
}
impl AdapterVersionEvaluationMetricBuilder {
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn baseline(mut self, input: crate::types::EvaluationMetric) -> Self {
        self.baseline = ::std::option::Option::Some(input);
        self
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn set_baseline(mut self, input: ::std::option::Option<crate::types::EvaluationMetric>) -> Self {
        self.baseline = input; self
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn get_baseline(&self) -> &::std::option::Option<crate::types::EvaluationMetric> {
        &self.baseline
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn adapter_version(mut self, input: crate::types::EvaluationMetric) -> Self {
        self.adapter_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn set_adapter_version(mut self, input: ::std::option::Option<crate::types::EvaluationMetric>) -> Self {
        self.adapter_version = input; self
    }
    /// <p>The F1 score, precision, and recall metrics for the baseline model.</p>
    pub fn get_adapter_version(&self) -> &::std::option::Option<crate::types::EvaluationMetric> {
        &self.adapter_version
    }
    /// <p>Indicates the feature type being analyzed by a given adapter version.</p>
    pub fn feature_type(mut self, input: crate::types::FeatureType) -> Self {
        self.feature_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates the feature type being analyzed by a given adapter version.</p>
    pub fn set_feature_type(mut self, input: ::std::option::Option<crate::types::FeatureType>) -> Self {
        self.feature_type = input; self
    }
    /// <p>Indicates the feature type being analyzed by a given adapter version.</p>
    pub fn get_feature_type(&self) -> &::std::option::Option<crate::types::FeatureType> {
        &self.feature_type
    }
    /// Consumes the builder and constructs a [`AdapterVersionEvaluationMetric`](crate::types::AdapterVersionEvaluationMetric).
    pub fn build(self) -> crate::types::AdapterVersionEvaluationMetric {
        crate::types::AdapterVersionEvaluationMetric {
            baseline: self.baseline
            ,
            adapter_version: self.adapter_version
            ,
            feature_type: self.feature_type
            ,
        }
    }
}

