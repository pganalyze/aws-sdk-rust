// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The dataset configuration options for a given version of an adapter. Can include an Amazon S3 bucket if specified.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdapterVersionDatasetConfig  {
    /// <p>The S3 bucket name and file name that identifies the document.</p> 
    /// <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> 
    /// <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>
    pub manifest_s3_object: ::std::option::Option<crate::types::S3Object>,
}
impl  AdapterVersionDatasetConfig  {
    /// <p>The S3 bucket name and file name that identifies the document.</p> 
    /// <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> 
    /// <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>
    pub fn manifest_s3_object(&self) -> ::std::option::Option<& crate::types::S3Object> {
        self.manifest_s3_object.as_ref()
    }
}
impl AdapterVersionDatasetConfig {
    /// Creates a new builder-style object to manufacture [`AdapterVersionDatasetConfig`](crate::types::AdapterVersionDatasetConfig).
    pub fn builder() -> crate::types::builders::AdapterVersionDatasetConfigBuilder {
        crate::types::builders::AdapterVersionDatasetConfigBuilder::default()
    }
}

/// A builder for [`AdapterVersionDatasetConfig`](crate::types::AdapterVersionDatasetConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AdapterVersionDatasetConfigBuilder {
    pub(crate) manifest_s3_object: ::std::option::Option<crate::types::S3Object>,
}
impl AdapterVersionDatasetConfigBuilder {
    /// <p>The S3 bucket name and file name that identifies the document.</p> 
    /// <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> 
    /// <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>
    pub fn manifest_s3_object(mut self, input: crate::types::S3Object) -> Self {
        self.manifest_s3_object = ::std::option::Option::Some(input);
        self
    }
    /// <p>The S3 bucket name and file name that identifies the document.</p> 
    /// <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> 
    /// <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>
    pub fn set_manifest_s3_object(mut self, input: ::std::option::Option<crate::types::S3Object>) -> Self {
        self.manifest_s3_object = input; self
    }
    /// <p>The S3 bucket name and file name that identifies the document.</p> 
    /// <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> 
    /// <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>
    pub fn get_manifest_s3_object(&self) -> &::std::option::Option<crate::types::S3Object> {
        &self.manifest_s3_object
    }
    /// Consumes the builder and constructs a [`AdapterVersionDatasetConfig`](crate::types::AdapterVersionDatasetConfig).
    pub fn build(self) -> crate::types::AdapterVersionDatasetConfig {
        crate::types::AdapterVersionDatasetConfig {
            manifest_s3_object: self.manifest_s3_object
            ,
        }
    }
}

