// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The evaluation metrics (F1 score, Precision, and Recall) for an adapter version.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EvaluationMetric  {
    /// <p>The F1 score for an adapter version.</p>
    pub f1_score: f32,
    /// <p>The Precision score for an adapter version.</p>
    pub precision: f32,
    /// <p>The Recall score for an adapter version.</p>
    pub recall: f32,
}
impl  EvaluationMetric  {
    /// <p>The F1 score for an adapter version.</p>
    pub fn f1_score(&self) -> f32 {
        self.f1_score
    }
    /// <p>The Precision score for an adapter version.</p>
    pub fn precision(&self) -> f32 {
        self.precision
    }
    /// <p>The Recall score for an adapter version.</p>
    pub fn recall(&self) -> f32 {
        self.recall
    }
}
impl EvaluationMetric {
    /// Creates a new builder-style object to manufacture [`EvaluationMetric`](crate::types::EvaluationMetric).
    pub fn builder() -> crate::types::builders::EvaluationMetricBuilder {
        crate::types::builders::EvaluationMetricBuilder::default()
    }
}

/// A builder for [`EvaluationMetric`](crate::types::EvaluationMetric).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EvaluationMetricBuilder {
    pub(crate) f1_score: ::std::option::Option<f32>,
    pub(crate) precision: ::std::option::Option<f32>,
    pub(crate) recall: ::std::option::Option<f32>,
}
impl EvaluationMetricBuilder {
    /// <p>The F1 score for an adapter version.</p>
    pub fn f1_score(mut self, input: f32) -> Self {
        self.f1_score = ::std::option::Option::Some(input);
        self
    }
    /// <p>The F1 score for an adapter version.</p>
    pub fn set_f1_score(mut self, input: ::std::option::Option<f32>) -> Self {
        self.f1_score = input; self
    }
    /// <p>The F1 score for an adapter version.</p>
    pub fn get_f1_score(&self) -> &::std::option::Option<f32> {
        &self.f1_score
    }
    /// <p>The Precision score for an adapter version.</p>
    pub fn precision(mut self, input: f32) -> Self {
        self.precision = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Precision score for an adapter version.</p>
    pub fn set_precision(mut self, input: ::std::option::Option<f32>) -> Self {
        self.precision = input; self
    }
    /// <p>The Precision score for an adapter version.</p>
    pub fn get_precision(&self) -> &::std::option::Option<f32> {
        &self.precision
    }
    /// <p>The Recall score for an adapter version.</p>
    pub fn recall(mut self, input: f32) -> Self {
        self.recall = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Recall score for an adapter version.</p>
    pub fn set_recall(mut self, input: ::std::option::Option<f32>) -> Self {
        self.recall = input; self
    }
    /// <p>The Recall score for an adapter version.</p>
    pub fn get_recall(&self) -> &::std::option::Option<f32> {
        &self.recall
    }
    /// Consumes the builder and constructs a [`EvaluationMetric`](crate::types::EvaluationMetric).
    pub fn build(self) -> crate::types::EvaluationMetric {
        crate::types::EvaluationMetric {
            f1_score: self.f1_score
                .unwrap_or_default()
            ,
            precision: self.precision
                .unwrap_or_default()
            ,
            recall: self.recall
                .unwrap_or_default()
            ,
        }
    }
}

