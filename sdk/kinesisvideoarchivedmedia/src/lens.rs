// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_get_images_output_output_next_token(input: &crate::operation::get_images::GetImagesOutput) -> ::std::option::Option<& ::std::string::String> {
                    let input = match &input.next_token {
                            ::std::option::Option::None => return ::std::option::Option::None,
                            ::std::option::Option::Some(t) => t
                        };
::std::option::Option::Some(input)
                }

pub(crate) fn reflens_list_fragments_output_output_next_token(input: &crate::operation::list_fragments::ListFragmentsOutput) -> ::std::option::Option<& ::std::string::String> {
                    let input = match &input.next_token {
                            ::std::option::Option::None => return ::std::option::Option::None,
                            ::std::option::Option::Some(t) => t
                        };
::std::option::Option::Some(input)
                }

pub(crate) fn lens_get_images_output_output_images(input: crate::operation::get_images::GetImagesOutput) -> ::std::option::Option<::std::vec::Vec::<crate::types::Image>> {
                    let input = match input.images {
                            ::std::option::Option::None => return ::std::option::Option::None,
                            ::std::option::Option::Some(t) => t
                        };
::std::option::Option::Some(input)
                }

pub(crate) fn lens_list_fragments_output_output_fragments(input: crate::operation::list_fragments::ListFragmentsOutput) -> ::std::option::Option<::std::vec::Vec::<crate::types::Fragment>> {
                    let input = match input.fragments {
                            ::std::option::Option::None => return ::std::option::Option::None,
                            ::std::option::Option::Some(t) => t
                        };
::std::option::Option::Some(input)
                }

