// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutInsightSelectors`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`trail_name(impl Into<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::trail_name) / [`set_trail_name(Option<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::set_trail_name):<br>required: **false**<br><p>The name of the CloudTrail trail for which you want to change or add Insights selectors.</p>  <p>You cannot use this parameter with the <code>EventDataStore</code> and <code>InsightsDestination</code> parameters.</p><br>
    ///   - [`insight_selectors(InsightSelector)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::insight_selectors) / [`set_insight_selectors(Option<Vec::<InsightSelector>>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::set_insight_selectors):<br>required: **true**<br><p>A JSON string that contains the Insights types you want to log on a trail or event data store. <code>ApiCallRateInsight</code> and <code>ApiErrorRateInsight</code> are valid Insight types.</p>  <p>The <code>ApiCallRateInsight</code> Insights type analyzes write-only management API calls that are aggregated per minute against a baseline API call volume.</p>  <p>The <code>ApiErrorRateInsight</code> Insights type analyzes management API calls that result in error codes. The error is shown if the API call is unsuccessful.</p><br>
    ///   - [`event_data_store(impl Into<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::event_data_store) / [`set_event_data_store(Option<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::set_event_data_store):<br>required: **false**<br><p>The ARN (or ID suffix of the ARN) of the source event data store for which you want to change or add Insights selectors. To enable Insights on an event data store, you must provide both the <code>EventDataStore</code> and <code>InsightsDestination</code> parameters.</p>  <p>You cannot use this parameter with the <code>TrailName</code> parameter.</p><br>
    ///   - [`insights_destination(impl Into<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::insights_destination) / [`set_insights_destination(Option<String>)`](crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::set_insights_destination):<br>required: **false**<br><p> The ARN (or ID suffix of the ARN) of the destination event data store that logs Insights events. To enable Insights on an event data store, you must provide both the <code>EventDataStore</code> and <code>InsightsDestination</code> parameters. </p>  <p>You cannot use this parameter with the <code>TrailName</code> parameter.</p><br>
                            /// - On success, responds with [`PutInsightSelectorsOutput`](crate::operation::put_insight_selectors::PutInsightSelectorsOutput) with field(s):
    ///   - [`trail_arn(Option<String>)`](crate::operation::put_insight_selectors::PutInsightSelectorsOutput::trail_arn): <p>The Amazon Resource Name (ARN) of a trail for which you want to change or add Insights selectors.</p>
    ///   - [`insight_selectors(Option<Vec::<InsightSelector>>)`](crate::operation::put_insight_selectors::PutInsightSelectorsOutput::insight_selectors): <p>A JSON string that contains the Insights event types that you want to log on a trail or event data store. The valid Insights types are <code>ApiErrorRateInsight</code> and <code>ApiCallRateInsight</code>.</p>
    ///   - [`event_data_store_arn(Option<String>)`](crate::operation::put_insight_selectors::PutInsightSelectorsOutput::event_data_store_arn): <p>The Amazon Resource Name (ARN) of the source event data store for which you want to change or add Insights selectors.</p>
    ///   - [`insights_destination(Option<String>)`](crate::operation::put_insight_selectors::PutInsightSelectorsOutput::insights_destination): <p> The ARN of the destination event data store that logs Insights events. </p>
                            /// - On failure, responds with [`SdkError<PutInsightSelectorsError>`](crate::operation::put_insight_selectors::PutInsightSelectorsError)
    pub fn put_insight_selectors(&self) -> crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder {
                                crate::operation::put_insight_selectors::builders::PutInsightSelectorsFluentBuilder::new(self.handle.clone())
                            }
}

