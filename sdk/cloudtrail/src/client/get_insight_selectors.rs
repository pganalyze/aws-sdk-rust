// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetInsightSelectors`](crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`trail_name(impl Into<String>)`](crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder::trail_name) / [`set_trail_name(Option<String>)`](crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder::set_trail_name):<br>required: **false**<br><p>Specifies the name of the trail or trail ARN. If you specify a trail name, the string must meet the following requirements:</p>  <ul>   <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_), or dashes (-)</p> </li>   <li> <p>Start with a letter or number, and end with a letter or number</p> </li>   <li> <p>Be between 3 and 128 characters</p> </li>   <li> <p>Have no adjacent periods, underscores or dashes. Names like <code>my-_namespace</code> and <code>my--namespace</code> are not valid.</p> </li>   <li> <p>Not be in IP address format (for example, 192.168.5.4)</p> </li>  </ul>  <p>If you specify a trail ARN, it must be in the format:</p>  <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code> </p>  <p>You cannot use this parameter with the <code>EventDataStore</code> parameter.</p><br>
    ///   - [`event_data_store(impl Into<String>)`](crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder::event_data_store) / [`set_event_data_store(Option<String>)`](crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder::set_event_data_store):<br>required: **false**<br><p> Specifies the ARN (or ID suffix of the ARN) of the event data store for which you want to get Insights selectors. </p>  <p>You cannot use this parameter with the <code>TrailName</code> parameter.</p><br>
                            /// - On success, responds with [`GetInsightSelectorsOutput`](crate::operation::get_insight_selectors::GetInsightSelectorsOutput) with field(s):
    ///   - [`trail_arn(Option<String>)`](crate::operation::get_insight_selectors::GetInsightSelectorsOutput::trail_arn): <p>The Amazon Resource Name (ARN) of a trail for which you want to get Insights selectors.</p>
    ///   - [`insight_selectors(Option<Vec::<InsightSelector>>)`](crate::operation::get_insight_selectors::GetInsightSelectorsOutput::insight_selectors): <p>A JSON string that contains the Insight types you want to log on a trail or event data store. <code>ApiErrorRateInsight</code> and <code>ApiCallRateInsight</code> are supported as Insights types.</p>
    ///   - [`event_data_store_arn(Option<String>)`](crate::operation::get_insight_selectors::GetInsightSelectorsOutput::event_data_store_arn): <p> The ARN of the source event data store that enabled Insights events. </p>
    ///   - [`insights_destination(Option<String>)`](crate::operation::get_insight_selectors::GetInsightSelectorsOutput::insights_destination): <p> The ARN of the destination event data store that logs Insights events. </p>
                            /// - On failure, responds with [`SdkError<GetInsightSelectorsError>`](crate::operation::get_insight_selectors::GetInsightSelectorsError)
    pub fn get_insight_selectors(&self) -> crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder {
                                crate::operation::get_insight_selectors::builders::GetInsightSelectorsFluentBuilder::new(self.handle.clone())
                            }
}

