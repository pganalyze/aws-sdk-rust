// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Provides details about an Database Migration Service (DMS) replication task. A replication task moves a set of data from the source endpoint to the target endpoint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsDmsReplicationTaskDetails  {
    /// <p> Indicates when you want a change data capture (CDC) operation to start. <code>CCdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub cdc_start_position: ::std::option::Option<::std::string::String>,
    /// <p> Indicates the start time for a CDC operation. <code>CdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub cdc_start_time: ::std::option::Option<::std::string::String>,
    /// <p> Indicates when you want a CDC operation to stop. The value can be either server time or commit time.</p>
    pub cdc_stop_position: ::std::option::Option<::std::string::String>,
    /// <p> The migration type. </p>
    pub migration_type: ::std::option::Option<::std::string::String>,
    /// <p> The identifier of the replication task.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p> A display name for the resource identifier at the end of the <code>EndpointArn</code> response parameter. If you don't specify a <code>ResourceIdentifier</code> value, DMS generates a default identifier value for the end of <code>EndpointArn</code>.</p>
    pub resource_identifier: ::std::option::Option<::std::string::String>,
    /// <p> The Amazon Resource Name (ARN) of a replication instance. </p>
    pub replication_instance_arn: ::std::option::Option<::std::string::String>,
    /// <p> The user-defined replication task identifier or name.</p>
    pub replication_task_identifier: ::std::option::Option<::std::string::String>,
    /// <p> The settings for the replication task.</p>
    pub replication_task_settings: ::std::option::Option<::std::string::String>,
    /// <p> The ARN of the source endpoint.</p>
    pub source_endpoint_arn: ::std::option::Option<::std::string::String>,
    /// <p> The table mappings for the replication task, in JSON format.</p>
    pub table_mappings: ::std::option::Option<::std::string::String>,
    /// <p> The ARN of the target endpoint.</p>
    pub target_endpoint_arn: ::std::option::Option<::std::string::String>,
    /// <p> Supplemental information that the task requires to migrate the data for certain source and target endpoints.</p>
    pub task_data: ::std::option::Option<::std::string::String>,
}
impl  AwsDmsReplicationTaskDetails  {
    /// <p> Indicates when you want a change data capture (CDC) operation to start. <code>CCdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn cdc_start_position(&self) -> ::std::option::Option<& str> {
        self.cdc_start_position.as_deref()
    }
    /// <p> Indicates the start time for a CDC operation. <code>CdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn cdc_start_time(&self) -> ::std::option::Option<& str> {
        self.cdc_start_time.as_deref()
    }
    /// <p> Indicates when you want a CDC operation to stop. The value can be either server time or commit time.</p>
    pub fn cdc_stop_position(&self) -> ::std::option::Option<& str> {
        self.cdc_stop_position.as_deref()
    }
    /// <p> The migration type. </p>
    pub fn migration_type(&self) -> ::std::option::Option<& str> {
        self.migration_type.as_deref()
    }
    /// <p> The identifier of the replication task.</p>
    pub fn id(&self) -> ::std::option::Option<& str> {
        self.id.as_deref()
    }
    /// <p> A display name for the resource identifier at the end of the <code>EndpointArn</code> response parameter. If you don't specify a <code>ResourceIdentifier</code> value, DMS generates a default identifier value for the end of <code>EndpointArn</code>.</p>
    pub fn resource_identifier(&self) -> ::std::option::Option<& str> {
        self.resource_identifier.as_deref()
    }
    /// <p> The Amazon Resource Name (ARN) of a replication instance. </p>
    pub fn replication_instance_arn(&self) -> ::std::option::Option<& str> {
        self.replication_instance_arn.as_deref()
    }
    /// <p> The user-defined replication task identifier or name.</p>
    pub fn replication_task_identifier(&self) -> ::std::option::Option<& str> {
        self.replication_task_identifier.as_deref()
    }
    /// <p> The settings for the replication task.</p>
    pub fn replication_task_settings(&self) -> ::std::option::Option<& str> {
        self.replication_task_settings.as_deref()
    }
    /// <p> The ARN of the source endpoint.</p>
    pub fn source_endpoint_arn(&self) -> ::std::option::Option<& str> {
        self.source_endpoint_arn.as_deref()
    }
    /// <p> The table mappings for the replication task, in JSON format.</p>
    pub fn table_mappings(&self) -> ::std::option::Option<& str> {
        self.table_mappings.as_deref()
    }
    /// <p> The ARN of the target endpoint.</p>
    pub fn target_endpoint_arn(&self) -> ::std::option::Option<& str> {
        self.target_endpoint_arn.as_deref()
    }
    /// <p> Supplemental information that the task requires to migrate the data for certain source and target endpoints.</p>
    pub fn task_data(&self) -> ::std::option::Option<& str> {
        self.task_data.as_deref()
    }
}
impl AwsDmsReplicationTaskDetails {
    /// Creates a new builder-style object to manufacture [`AwsDmsReplicationTaskDetails`](crate::types::AwsDmsReplicationTaskDetails).
    pub fn builder() -> crate::types::builders::AwsDmsReplicationTaskDetailsBuilder {
        crate::types::builders::AwsDmsReplicationTaskDetailsBuilder::default()
    }
}

/// A builder for [`AwsDmsReplicationTaskDetails`](crate::types::AwsDmsReplicationTaskDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsDmsReplicationTaskDetailsBuilder {
    pub(crate) cdc_start_position: ::std::option::Option<::std::string::String>,
    pub(crate) cdc_start_time: ::std::option::Option<::std::string::String>,
    pub(crate) cdc_stop_position: ::std::option::Option<::std::string::String>,
    pub(crate) migration_type: ::std::option::Option<::std::string::String>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) replication_instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) replication_task_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) replication_task_settings: ::std::option::Option<::std::string::String>,
    pub(crate) source_endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) table_mappings: ::std::option::Option<::std::string::String>,
    pub(crate) target_endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) task_data: ::std::option::Option<::std::string::String>,
}
impl AwsDmsReplicationTaskDetailsBuilder {
    /// <p> Indicates when you want a change data capture (CDC) operation to start. <code>CCdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn cdc_start_position(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cdc_start_position = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates when you want a change data capture (CDC) operation to start. <code>CCdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn set_cdc_start_position(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cdc_start_position = input; self
    }
    /// <p> Indicates when you want a change data capture (CDC) operation to start. <code>CCdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn get_cdc_start_position(&self) -> &::std::option::Option<::std::string::String> {
        &self.cdc_start_position
    }
    /// <p> Indicates the start time for a CDC operation. <code>CdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn cdc_start_time(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cdc_start_time = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates the start time for a CDC operation. <code>CdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn set_cdc_start_time(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cdc_start_time = input; self
    }
    /// <p> Indicates the start time for a CDC operation. <code>CdcStartPosition</code> or <code>CCdcStartTime</code> specifies when you want a CDC operation to start. Only a value for one of these fields is included.</p>
    pub fn get_cdc_start_time(&self) -> &::std::option::Option<::std::string::String> {
        &self.cdc_start_time
    }
    /// <p> Indicates when you want a CDC operation to stop. The value can be either server time or commit time.</p>
    pub fn cdc_stop_position(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cdc_stop_position = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates when you want a CDC operation to stop. The value can be either server time or commit time.</p>
    pub fn set_cdc_stop_position(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cdc_stop_position = input; self
    }
    /// <p> Indicates when you want a CDC operation to stop. The value can be either server time or commit time.</p>
    pub fn get_cdc_stop_position(&self) -> &::std::option::Option<::std::string::String> {
        &self.cdc_stop_position
    }
    /// <p> The migration type. </p>
    pub fn migration_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.migration_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The migration type. </p>
    pub fn set_migration_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.migration_type = input; self
    }
    /// <p> The migration type. </p>
    pub fn get_migration_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.migration_type
    }
    /// <p> The identifier of the replication task.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The identifier of the replication task.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    /// <p> The identifier of the replication task.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p> A display name for the resource identifier at the end of the <code>EndpointArn</code> response parameter. If you don't specify a <code>ResourceIdentifier</code> value, DMS generates a default identifier value for the end of <code>EndpointArn</code>.</p>
    pub fn resource_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> A display name for the resource identifier at the end of the <code>EndpointArn</code> response parameter. If you don't specify a <code>ResourceIdentifier</code> value, DMS generates a default identifier value for the end of <code>EndpointArn</code>.</p>
    pub fn set_resource_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_identifier = input; self
    }
    /// <p> A display name for the resource identifier at the end of the <code>EndpointArn</code> response parameter. If you don't specify a <code>ResourceIdentifier</code> value, DMS generates a default identifier value for the end of <code>EndpointArn</code>.</p>
    pub fn get_resource_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_identifier
    }
    /// <p> The Amazon Resource Name (ARN) of a replication instance. </p>
    pub fn replication_instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.replication_instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) of a replication instance. </p>
    pub fn set_replication_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.replication_instance_arn = input; self
    }
    /// <p> The Amazon Resource Name (ARN) of a replication instance. </p>
    pub fn get_replication_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.replication_instance_arn
    }
    /// <p> The user-defined replication task identifier or name.</p>
    pub fn replication_task_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.replication_task_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The user-defined replication task identifier or name.</p>
    pub fn set_replication_task_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.replication_task_identifier = input; self
    }
    /// <p> The user-defined replication task identifier or name.</p>
    pub fn get_replication_task_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.replication_task_identifier
    }
    /// <p> The settings for the replication task.</p>
    pub fn replication_task_settings(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.replication_task_settings = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The settings for the replication task.</p>
    pub fn set_replication_task_settings(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.replication_task_settings = input; self
    }
    /// <p> The settings for the replication task.</p>
    pub fn get_replication_task_settings(&self) -> &::std::option::Option<::std::string::String> {
        &self.replication_task_settings
    }
    /// <p> The ARN of the source endpoint.</p>
    pub fn source_endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The ARN of the source endpoint.</p>
    pub fn set_source_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_endpoint_arn = input; self
    }
    /// <p> The ARN of the source endpoint.</p>
    pub fn get_source_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_endpoint_arn
    }
    /// <p> The table mappings for the replication task, in JSON format.</p>
    pub fn table_mappings(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table_mappings = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The table mappings for the replication task, in JSON format.</p>
    pub fn set_table_mappings(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table_mappings = input; self
    }
    /// <p> The table mappings for the replication task, in JSON format.</p>
    pub fn get_table_mappings(&self) -> &::std::option::Option<::std::string::String> {
        &self.table_mappings
    }
    /// <p> The ARN of the target endpoint.</p>
    pub fn target_endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The ARN of the target endpoint.</p>
    pub fn set_target_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_endpoint_arn = input; self
    }
    /// <p> The ARN of the target endpoint.</p>
    pub fn get_target_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_endpoint_arn
    }
    /// <p> Supplemental information that the task requires to migrate the data for certain source and target endpoints.</p>
    pub fn task_data(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_data = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Supplemental information that the task requires to migrate the data for certain source and target endpoints.</p>
    pub fn set_task_data(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_data = input; self
    }
    /// <p> Supplemental information that the task requires to migrate the data for certain source and target endpoints.</p>
    pub fn get_task_data(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_data
    }
    /// Consumes the builder and constructs a [`AwsDmsReplicationTaskDetails`](crate::types::AwsDmsReplicationTaskDetails).
    pub fn build(self) -> crate::types::AwsDmsReplicationTaskDetails {
        crate::types::AwsDmsReplicationTaskDetails {
            cdc_start_position: self.cdc_start_position
            ,
            cdc_start_time: self.cdc_start_time
            ,
            cdc_stop_position: self.cdc_stop_position
            ,
            migration_type: self.migration_type
            ,
            id: self.id
            ,
            resource_identifier: self.resource_identifier
            ,
            replication_instance_arn: self.replication_instance_arn
            ,
            replication_task_identifier: self.replication_task_identifier
            ,
            replication_task_settings: self.replication_task_settings
            ,
            source_endpoint_arn: self.source_endpoint_arn
            ,
            table_mappings: self.table_mappings
            ,
            target_endpoint_arn: self.target_endpoint_arn
            ,
            task_data: self.task_data
            ,
        }
    }
}

