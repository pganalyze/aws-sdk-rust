// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The failover configuration for an endpoint. This includes what triggers failover and what happens when it's triggered.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsEventsEndpointRoutingConfigFailoverConfigDetails  {
    /// <p> The main Region of the endpoint.</p>
    pub primary: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails>,
    /// <p> The Region that events are routed to when failover is triggered or event replication is enabled.</p>
    pub secondary: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails>,
}
impl  AwsEventsEndpointRoutingConfigFailoverConfigDetails  {
    /// <p> The main Region of the endpoint.</p>
    pub fn primary(&self) -> ::std::option::Option<& crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails> {
        self.primary.as_ref()
    }
    /// <p> The Region that events are routed to when failover is triggered or event replication is enabled.</p>
    pub fn secondary(&self) -> ::std::option::Option<& crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails> {
        self.secondary.as_ref()
    }
}
impl AwsEventsEndpointRoutingConfigFailoverConfigDetails {
    /// Creates a new builder-style object to manufacture [`AwsEventsEndpointRoutingConfigFailoverConfigDetails`](crate::types::AwsEventsEndpointRoutingConfigFailoverConfigDetails).
    pub fn builder() -> crate::types::builders::AwsEventsEndpointRoutingConfigFailoverConfigDetailsBuilder {
        crate::types::builders::AwsEventsEndpointRoutingConfigFailoverConfigDetailsBuilder::default()
    }
}

/// A builder for [`AwsEventsEndpointRoutingConfigFailoverConfigDetails`](crate::types::AwsEventsEndpointRoutingConfigFailoverConfigDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsEventsEndpointRoutingConfigFailoverConfigDetailsBuilder {
    pub(crate) primary: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails>,
    pub(crate) secondary: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails>,
}
impl AwsEventsEndpointRoutingConfigFailoverConfigDetailsBuilder {
    /// <p> The main Region of the endpoint.</p>
    pub fn primary(mut self, input: crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails) -> Self {
        self.primary = ::std::option::Option::Some(input);
        self
    }
    /// <p> The main Region of the endpoint.</p>
    pub fn set_primary(mut self, input: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails>) -> Self {
        self.primary = input; self
    }
    /// <p> The main Region of the endpoint.</p>
    pub fn get_primary(&self) -> &::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails> {
        &self.primary
    }
    /// <p> The Region that events are routed to when failover is triggered or event replication is enabled.</p>
    pub fn secondary(mut self, input: crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails) -> Self {
        self.secondary = ::std::option::Option::Some(input);
        self
    }
    /// <p> The Region that events are routed to when failover is triggered or event replication is enabled.</p>
    pub fn set_secondary(mut self, input: ::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails>) -> Self {
        self.secondary = input; self
    }
    /// <p> The Region that events are routed to when failover is triggered or event replication is enabled.</p>
    pub fn get_secondary(&self) -> &::std::option::Option<crate::types::AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails> {
        &self.secondary
    }
    /// Consumes the builder and constructs a [`AwsEventsEndpointRoutingConfigFailoverConfigDetails`](crate::types::AwsEventsEndpointRoutingConfigFailoverConfigDetails).
    pub fn build(self) -> crate::types::AwsEventsEndpointRoutingConfigFailoverConfigDetails {
        crate::types::AwsEventsEndpointRoutingConfigFailoverConfigDetails {
            primary: self.primary
            ,
            secondary: self.secondary
            ,
        }
    }
}

