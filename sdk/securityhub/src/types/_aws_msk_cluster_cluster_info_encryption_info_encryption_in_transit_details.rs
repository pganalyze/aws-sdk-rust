// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The settings for encrypting data in transit.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails  {
    /// <p> When set to <code>true</code>, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to <code>false</code>, the communication happens in plain text. The default value is <code>true</code>.</p>
    pub in_cluster: ::std::option::Option<bool>,
    /// <p> Indicates the encryption setting for data in transit between clients and brokers.</p>
    pub client_broker: ::std::option::Option<::std::string::String>,
}
impl  AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails  {
    /// <p> When set to <code>true</code>, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to <code>false</code>, the communication happens in plain text. The default value is <code>true</code>.</p>
    pub fn in_cluster(&self) -> ::std::option::Option<bool> {
        self.in_cluster
    }
    /// <p> Indicates the encryption setting for data in transit between clients and brokers.</p>
    pub fn client_broker(&self) -> ::std::option::Option<& str> {
        self.client_broker.as_deref()
    }
}
impl AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails {
    /// Creates a new builder-style object to manufacture [`AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails`](crate::types::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails).
    pub fn builder() -> crate::types::builders::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetailsBuilder {
        crate::types::builders::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetailsBuilder::default()
    }
}

/// A builder for [`AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails`](crate::types::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetailsBuilder {
    pub(crate) in_cluster: ::std::option::Option<bool>,
    pub(crate) client_broker: ::std::option::Option<::std::string::String>,
}
impl AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetailsBuilder {
    /// <p> When set to <code>true</code>, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to <code>false</code>, the communication happens in plain text. The default value is <code>true</code>.</p>
    pub fn in_cluster(mut self, input: bool) -> Self {
        self.in_cluster = ::std::option::Option::Some(input);
        self
    }
    /// <p> When set to <code>true</code>, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to <code>false</code>, the communication happens in plain text. The default value is <code>true</code>.</p>
    pub fn set_in_cluster(mut self, input: ::std::option::Option<bool>) -> Self {
        self.in_cluster = input; self
    }
    /// <p> When set to <code>true</code>, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to <code>false</code>, the communication happens in plain text. The default value is <code>true</code>.</p>
    pub fn get_in_cluster(&self) -> &::std::option::Option<bool> {
        &self.in_cluster
    }
    /// <p> Indicates the encryption setting for data in transit between clients and brokers.</p>
    pub fn client_broker(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_broker = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates the encryption setting for data in transit between clients and brokers.</p>
    pub fn set_client_broker(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_broker = input; self
    }
    /// <p> Indicates the encryption setting for data in transit between clients and brokers.</p>
    pub fn get_client_broker(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_broker
    }
    /// Consumes the builder and constructs a [`AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails`](crate::types::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails).
    pub fn build(self) -> crate::types::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails {
        crate::types::AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails {
            in_cluster: self.in_cluster
            ,
            client_broker: self.client_broker
            ,
        }
    }
}

