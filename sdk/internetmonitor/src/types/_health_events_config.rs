// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type with the configuration information that determines the threshold and other conditions for when Internet Monitor creates a health event for an overall performance or availability issue, across an application's geographies.</p> 
/// <p>Defines the percentages, for overall performance scores and availability scores for an application, that are the thresholds for when Amazon CloudWatch Internet Monitor creates a health event. You can override the defaults to set a custom threshold for overall performance or availability scores, or both.</p> 
/// <p>You can also set thresholds for local health scores,, where Internet Monitor creates a health event when scores cross a threshold for one or more city-networks, in addition to creating an event when an overall score crosses a threshold.</p> 
/// <p>If you don't set a health event threshold, the default value is 95%.</p> 
/// <p>For local thresholds, you also set a minimum percentage of overall traffic that is impacted by an issue before Internet Monitor creates an event. In addition, you can disable local thresholds, for performance scores, availability scores, or both.</p> 
/// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview"> Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch User Guide</i>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HealthEventsConfig  {
    /// <p>The health event threshold percentage set for availability scores.</p>
    pub availability_score_threshold: f64,
    /// <p>The health event threshold percentage set for performance scores.</p>
    pub performance_score_threshold: f64,
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.</p>
    pub availability_local_health_events_config: ::std::option::Option<crate::types::LocalHealthEventsConfig>,
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.</p>
    pub performance_local_health_events_config: ::std::option::Option<crate::types::LocalHealthEventsConfig>,
}
impl  HealthEventsConfig  {
    /// <p>The health event threshold percentage set for availability scores.</p>
    pub fn availability_score_threshold(&self) -> f64 {
        self.availability_score_threshold
    }
    /// <p>The health event threshold percentage set for performance scores.</p>
    pub fn performance_score_threshold(&self) -> f64 {
        self.performance_score_threshold
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.</p>
    pub fn availability_local_health_events_config(&self) -> ::std::option::Option<& crate::types::LocalHealthEventsConfig> {
        self.availability_local_health_events_config.as_ref()
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.</p>
    pub fn performance_local_health_events_config(&self) -> ::std::option::Option<& crate::types::LocalHealthEventsConfig> {
        self.performance_local_health_events_config.as_ref()
    }
}
impl HealthEventsConfig {
    /// Creates a new builder-style object to manufacture [`HealthEventsConfig`](crate::types::HealthEventsConfig).
    pub fn builder() -> crate::types::builders::HealthEventsConfigBuilder {
        crate::types::builders::HealthEventsConfigBuilder::default()
    }
}

/// A builder for [`HealthEventsConfig`](crate::types::HealthEventsConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HealthEventsConfigBuilder {
    pub(crate) availability_score_threshold: ::std::option::Option<f64>,
    pub(crate) performance_score_threshold: ::std::option::Option<f64>,
    pub(crate) availability_local_health_events_config: ::std::option::Option<crate::types::LocalHealthEventsConfig>,
    pub(crate) performance_local_health_events_config: ::std::option::Option<crate::types::LocalHealthEventsConfig>,
}
impl HealthEventsConfigBuilder {
    /// <p>The health event threshold percentage set for availability scores.</p>
    pub fn availability_score_threshold(mut self, input: f64) -> Self {
        self.availability_score_threshold = ::std::option::Option::Some(input);
        self
    }
    /// <p>The health event threshold percentage set for availability scores.</p>
    pub fn set_availability_score_threshold(mut self, input: ::std::option::Option<f64>) -> Self {
        self.availability_score_threshold = input; self
    }
    /// <p>The health event threshold percentage set for availability scores.</p>
    pub fn get_availability_score_threshold(&self) -> &::std::option::Option<f64> {
        &self.availability_score_threshold
    }
    /// <p>The health event threshold percentage set for performance scores.</p>
    pub fn performance_score_threshold(mut self, input: f64) -> Self {
        self.performance_score_threshold = ::std::option::Option::Some(input);
        self
    }
    /// <p>The health event threshold percentage set for performance scores.</p>
    pub fn set_performance_score_threshold(mut self, input: ::std::option::Option<f64>) -> Self {
        self.performance_score_threshold = input; self
    }
    /// <p>The health event threshold percentage set for performance scores.</p>
    pub fn get_performance_score_threshold(&self) -> &::std::option::Option<f64> {
        &self.performance_score_threshold
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.</p>
    pub fn availability_local_health_events_config(mut self, input: crate::types::LocalHealthEventsConfig) -> Self {
        self.availability_local_health_events_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.</p>
    pub fn set_availability_local_health_events_config(mut self, input: ::std::option::Option<crate::types::LocalHealthEventsConfig>) -> Self {
        self.availability_local_health_events_config = input; self
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue.</p>
    pub fn get_availability_local_health_events_config(&self) -> &::std::option::Option<crate::types::LocalHealthEventsConfig> {
        &self.availability_local_health_events_config
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.</p>
    pub fn performance_local_health_events_config(mut self, input: crate::types::LocalHealthEventsConfig) -> Self {
        self.performance_local_health_events_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.</p>
    pub fn set_performance_local_health_events_config(mut self, input: ::std::option::Option<crate::types::LocalHealthEventsConfig>) -> Self {
        self.performance_local_health_events_config = input; self
    }
    /// <p>The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue.</p>
    pub fn get_performance_local_health_events_config(&self) -> &::std::option::Option<crate::types::LocalHealthEventsConfig> {
        &self.performance_local_health_events_config
    }
    /// Consumes the builder and constructs a [`HealthEventsConfig`](crate::types::HealthEventsConfig).
    pub fn build(self) -> crate::types::HealthEventsConfig {
        crate::types::HealthEventsConfig {
            availability_score_threshold: self.availability_score_threshold
                .unwrap_or_default()
            ,
            performance_score_threshold: self.performance_score_threshold
                .unwrap_or_default()
            ,
            availability_local_health_events_config: self.availability_local_health_events_config
            ,
            performance_local_health_events_config: self.performance_local_health_events_config
            ,
        }
    }
}

