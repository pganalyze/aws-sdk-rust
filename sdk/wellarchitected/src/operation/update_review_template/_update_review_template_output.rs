// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateReviewTemplateOutput  {
    /// <p>A review template.</p>
    pub review_template: ::std::option::Option<crate::types::ReviewTemplate>,
    _request_id: Option<String>,
}
impl  UpdateReviewTemplateOutput  {
    /// <p>A review template.</p>
    pub fn review_template(&self) -> ::std::option::Option<& crate::types::ReviewTemplate> {
        self.review_template.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for UpdateReviewTemplateOutput {
                                fn request_id(&self) -> Option<&str> {
                                    self._request_id.as_deref()
                                }
                            }
impl UpdateReviewTemplateOutput {
    /// Creates a new builder-style object to manufacture [`UpdateReviewTemplateOutput`](crate::operation::update_review_template::UpdateReviewTemplateOutput).
    pub fn builder() -> crate::operation::update_review_template::builders::UpdateReviewTemplateOutputBuilder {
        crate::operation::update_review_template::builders::UpdateReviewTemplateOutputBuilder::default()
    }
}

/// A builder for [`UpdateReviewTemplateOutput`](crate::operation::update_review_template::UpdateReviewTemplateOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateReviewTemplateOutputBuilder {
    pub(crate) review_template: ::std::option::Option<crate::types::ReviewTemplate>,
    _request_id: Option<String>,
}
impl UpdateReviewTemplateOutputBuilder {
    /// <p>A review template.</p>
    pub fn review_template(mut self, input: crate::types::ReviewTemplate) -> Self {
        self.review_template = ::std::option::Option::Some(input);
        self
    }
    /// <p>A review template.</p>
    pub fn set_review_template(mut self, input: ::std::option::Option<crate::types::ReviewTemplate>) -> Self {
        self.review_template = input; self
    }
    /// <p>A review template.</p>
    pub fn get_review_template(&self) -> &::std::option::Option<crate::types::ReviewTemplate> {
        &self.review_template
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                    self._request_id = Some(request_id.into());
                                    self
                                }
    
                                pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                    self._request_id = request_id;
                                    self
                                }
    /// Consumes the builder and constructs a [`UpdateReviewTemplateOutput`](crate::operation::update_review_template::UpdateReviewTemplateOutput).
    pub fn build(self) -> crate::operation::update_review_template::UpdateReviewTemplateOutput {
        crate::operation::update_review_template::UpdateReviewTemplateOutput {
            review_template: self.review_template
            ,
            _request_id: self._request_id,
        }
    }
}

