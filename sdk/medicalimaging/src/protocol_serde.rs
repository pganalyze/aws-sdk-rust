// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(result: ::std::result::Result<O, E>) -> ::std::result::Result<::aws_smithy_runtime_api::client::interceptors::context::Output, ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>>
            where
                O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
                E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
            {
                result.map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
                    .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
                    .map_err(::std::convert::Into::into)
            }

pub fn parse_http_error_metadata(_response_status: u16, response_headers: &::aws_smithy_runtime_api::http::Headers, response_body: &[u8]) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
                    crate::json_errors::parse_error_metadata(response_body, response_headers)
                }

pub(crate) mod shape_copy_image_set;

pub fn rest_json_unset_struct_payload() -> ::std::vec::Vec<u8> {
                    b"{}"[..].into()
                }

pub(crate) mod shape_copy_image_set_input;

pub(crate) mod shape_create_datastore;

pub(crate) mod shape_delete_datastore;

pub(crate) mod shape_delete_image_set;

pub(crate) mod shape_get_datastore;

pub(crate) mod shape_get_dicom_import_job;

pub(crate) mod shape_get_image_frame;

pub(crate) mod shape_get_image_frame_input;

pub(crate) mod shape_get_image_set;

pub(crate) mod shape_get_image_set_metadata;

pub(crate) mod shape_list_datastores;

pub(crate) mod shape_list_dicom_import_jobs;

pub(crate) mod shape_list_image_set_versions;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_search_image_sets;

pub(crate) mod shape_search_image_sets_input;

pub(crate) mod shape_start_dicom_import_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_image_set_metadata;

pub fn rest_json_unset_union_payload() -> ::std::vec::Vec<u8> { ::std::vec::Vec::new() }

pub(crate) mod shape_update_image_set_metadata_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
                if data.is_empty() {
                    b"{}"
                } else {
                    data
                }
            }

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_datastore_input;

pub(crate) mod shape_get_image_frame_output;

pub(crate) mod shape_get_image_set_metadata_output;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_dicom_import_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_copy_destination_image_set_properties;

pub(crate) mod shape_copy_image_set_information;

pub(crate) mod shape_copy_source_image_set_properties;

pub(crate) mod shape_datastore_properties;

pub(crate) mod shape_datastore_summaries;

pub(crate) mod shape_dicom_import_job_properties;

pub(crate) mod shape_dicom_import_job_summaries;

pub(crate) mod shape_image_frame_information;

pub(crate) mod shape_image_set_properties_list;

pub(crate) mod shape_image_sets_metadata_summaries;

pub(crate) mod shape_metadata_updates;

pub(crate) mod shape_search_criteria;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_copy_destination_image_set;

pub(crate) mod shape_copy_source_image_set_information;

pub(crate) mod shape_datastore_summary;

pub(crate) mod shape_dicom_import_job_summary;

pub(crate) mod shape_dicom_updates;

pub(crate) mod shape_image_set_properties;

pub(crate) mod shape_image_sets_metadata_summary;

pub(crate) mod shape_search_filter;

pub(crate) mod shape_dicom_tags;

pub(crate) mod shape_search_by_attribute_value;

pub(crate) mod shape_dicom_study_date_and_time;

