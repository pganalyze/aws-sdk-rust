// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summarized information of replication between clusters.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplicationInfoSummary  {
    /// <p>The alias of the source Kafka cluster.</p>
    pub source_kafka_cluster_alias: ::std::option::Option<::std::string::String>,
    /// <p>The alias of the target Kafka cluster.</p>
    pub target_kafka_cluster_alias: ::std::option::Option<::std::string::String>,
}
impl  ReplicationInfoSummary  {
    /// <p>The alias of the source Kafka cluster.</p>
    pub fn source_kafka_cluster_alias(&self) -> ::std::option::Option<& str> {
        self.source_kafka_cluster_alias.as_deref()
    }
    /// <p>The alias of the target Kafka cluster.</p>
    pub fn target_kafka_cluster_alias(&self) -> ::std::option::Option<& str> {
        self.target_kafka_cluster_alias.as_deref()
    }
}
impl ReplicationInfoSummary {
    /// Creates a new builder-style object to manufacture [`ReplicationInfoSummary`](crate::types::ReplicationInfoSummary).
    pub fn builder() -> crate::types::builders::ReplicationInfoSummaryBuilder {
        crate::types::builders::ReplicationInfoSummaryBuilder::default()
    }
}

/// A builder for [`ReplicationInfoSummary`](crate::types::ReplicationInfoSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReplicationInfoSummaryBuilder {
    pub(crate) source_kafka_cluster_alias: ::std::option::Option<::std::string::String>,
    pub(crate) target_kafka_cluster_alias: ::std::option::Option<::std::string::String>,
}
impl ReplicationInfoSummaryBuilder {
    /// <p>The alias of the source Kafka cluster.</p>
    pub fn source_kafka_cluster_alias(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_kafka_cluster_alias = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The alias of the source Kafka cluster.</p>
    pub fn set_source_kafka_cluster_alias(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_kafka_cluster_alias = input; self
    }
    /// <p>The alias of the source Kafka cluster.</p>
    pub fn get_source_kafka_cluster_alias(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_kafka_cluster_alias
    }
    /// <p>The alias of the target Kafka cluster.</p>
    pub fn target_kafka_cluster_alias(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_kafka_cluster_alias = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The alias of the target Kafka cluster.</p>
    pub fn set_target_kafka_cluster_alias(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_kafka_cluster_alias = input; self
    }
    /// <p>The alias of the target Kafka cluster.</p>
    pub fn get_target_kafka_cluster_alias(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_kafka_cluster_alias
    }
    /// Consumes the builder and constructs a [`ReplicationInfoSummary`](crate::types::ReplicationInfoSummary).
    pub fn build(self) -> crate::types::ReplicationInfoSummary {
        crate::types::ReplicationInfoSummary {
            source_kafka_cluster_alias: self.source_kafka_cluster_alias
            ,
            target_kafka_cluster_alias: self.target_kafka_cluster_alias
            ,
        }
    }
}

