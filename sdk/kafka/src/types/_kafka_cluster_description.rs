// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about Kafka Cluster used as source / target for replication.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KafkaClusterDescription  {
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub amazon_msk_cluster: ::std::option::Option<crate::types::AmazonMskCluster>,
    /// <p>The alias of the Kafka cluster. Used to prefix names of replicated topics.</p>
    pub kafka_cluster_alias: ::std::option::Option<::std::string::String>,
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub vpc_config: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>,
}
impl  KafkaClusterDescription  {
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn amazon_msk_cluster(&self) -> ::std::option::Option<& crate::types::AmazonMskCluster> {
        self.amazon_msk_cluster.as_ref()
    }
    /// <p>The alias of the Kafka cluster. Used to prefix names of replicated topics.</p>
    pub fn kafka_cluster_alias(&self) -> ::std::option::Option<& str> {
        self.kafka_cluster_alias.as_deref()
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn vpc_config(&self) -> ::std::option::Option<& crate::types::KafkaClusterClientVpcConfig> {
        self.vpc_config.as_ref()
    }
}
impl KafkaClusterDescription {
    /// Creates a new builder-style object to manufacture [`KafkaClusterDescription`](crate::types::KafkaClusterDescription).
    pub fn builder() -> crate::types::builders::KafkaClusterDescriptionBuilder {
        crate::types::builders::KafkaClusterDescriptionBuilder::default()
    }
}

/// A builder for [`KafkaClusterDescription`](crate::types::KafkaClusterDescription).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KafkaClusterDescriptionBuilder {
    pub(crate) amazon_msk_cluster: ::std::option::Option<crate::types::AmazonMskCluster>,
    pub(crate) kafka_cluster_alias: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_config: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>,
}
impl KafkaClusterDescriptionBuilder {
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn amazon_msk_cluster(mut self, input: crate::types::AmazonMskCluster) -> Self {
        self.amazon_msk_cluster = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn set_amazon_msk_cluster(mut self, input: ::std::option::Option<crate::types::AmazonMskCluster>) -> Self {
        self.amazon_msk_cluster = input; self
    }
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn get_amazon_msk_cluster(&self) -> &::std::option::Option<crate::types::AmazonMskCluster> {
        &self.amazon_msk_cluster
    }
    /// <p>The alias of the Kafka cluster. Used to prefix names of replicated topics.</p>
    pub fn kafka_cluster_alias(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kafka_cluster_alias = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The alias of the Kafka cluster. Used to prefix names of replicated topics.</p>
    pub fn set_kafka_cluster_alias(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kafka_cluster_alias = input; self
    }
    /// <p>The alias of the Kafka cluster. Used to prefix names of replicated topics.</p>
    pub fn get_kafka_cluster_alias(&self) -> &::std::option::Option<::std::string::String> {
        &self.kafka_cluster_alias
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn vpc_config(mut self, input: crate::types::KafkaClusterClientVpcConfig) -> Self {
        self.vpc_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn set_vpc_config(mut self, input: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>) -> Self {
        self.vpc_config = input; self
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn get_vpc_config(&self) -> &::std::option::Option<crate::types::KafkaClusterClientVpcConfig> {
        &self.vpc_config
    }
    /// Consumes the builder and constructs a [`KafkaClusterDescription`](crate::types::KafkaClusterDescription).
    pub fn build(self) -> crate::types::KafkaClusterDescription {
        crate::types::KafkaClusterDescription {
            amazon_msk_cluster: self.amazon_msk_cluster
            ,
            kafka_cluster_alias: self.kafka_cluster_alias
            ,
            vpc_config: self.vpc_config
            ,
        }
    }
}

