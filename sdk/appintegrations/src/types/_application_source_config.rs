// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for where the application should be loaded from.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ApplicationSourceConfig  {
    /// <p>The external URL source for the application.</p>
    pub external_url_config: ::std::option::Option<crate::types::ExternalUrlConfig>,
}
impl  ApplicationSourceConfig  {
    /// <p>The external URL source for the application.</p>
    pub fn external_url_config(&self) -> ::std::option::Option<& crate::types::ExternalUrlConfig> {
        self.external_url_config.as_ref()
    }
}
impl ApplicationSourceConfig {
    /// Creates a new builder-style object to manufacture [`ApplicationSourceConfig`](crate::types::ApplicationSourceConfig).
    pub fn builder() -> crate::types::builders::ApplicationSourceConfigBuilder {
        crate::types::builders::ApplicationSourceConfigBuilder::default()
    }
}

/// A builder for [`ApplicationSourceConfig`](crate::types::ApplicationSourceConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ApplicationSourceConfigBuilder {
    pub(crate) external_url_config: ::std::option::Option<crate::types::ExternalUrlConfig>,
}
impl ApplicationSourceConfigBuilder {
    /// <p>The external URL source for the application.</p>
    pub fn external_url_config(mut self, input: crate::types::ExternalUrlConfig) -> Self {
        self.external_url_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The external URL source for the application.</p>
    pub fn set_external_url_config(mut self, input: ::std::option::Option<crate::types::ExternalUrlConfig>) -> Self {
        self.external_url_config = input; self
    }
    /// <p>The external URL source for the application.</p>
    pub fn get_external_url_config(&self) -> &::std::option::Option<crate::types::ExternalUrlConfig> {
        &self.external_url_config
    }
    /// Consumes the builder and constructs a [`ApplicationSourceConfig`](crate::types::ApplicationSourceConfig).
    pub fn build(self) -> crate::types::ApplicationSourceConfig {
        crate::types::ApplicationSourceConfig {
            external_url_config: self.external_url_config
            ,
        }
    }
}

