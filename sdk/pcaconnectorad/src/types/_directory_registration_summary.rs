// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The directory registration represents the authorization of the connector service with the Active Directory.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DirectoryRegistrationSummary  {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the Active Directory.</p>
    pub directory_id: ::std::option::Option<::std::string::String>,
    /// <p>Status of the directory registration.</p>
    pub status: ::std::option::Option<crate::types::DirectoryRegistrationStatus>,
    /// <p>Additional information about the directory registration status if the status is failed.</p>
    pub status_reason: ::std::option::Option<crate::types::DirectoryRegistrationStatusReason>,
    /// <p>The date and time that the directory registration was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that the directory registration was updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl  DirectoryRegistrationSummary  {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn arn(&self) -> ::std::option::Option<& str> {
        self.arn.as_deref()
    }
    /// <p>The identifier of the Active Directory.</p>
    pub fn directory_id(&self) -> ::std::option::Option<& str> {
        self.directory_id.as_deref()
    }
    /// <p>Status of the directory registration.</p>
    pub fn status(&self) -> ::std::option::Option<& crate::types::DirectoryRegistrationStatus> {
        self.status.as_ref()
    }
    /// <p>Additional information about the directory registration status if the status is failed.</p>
    pub fn status_reason(&self) -> ::std::option::Option<& crate::types::DirectoryRegistrationStatusReason> {
        self.status_reason.as_ref()
    }
    /// <p>The date and time that the directory registration was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The date and time that the directory registration was updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl DirectoryRegistrationSummary {
    /// Creates a new builder-style object to manufacture [`DirectoryRegistrationSummary`](crate::types::DirectoryRegistrationSummary).
    pub fn builder() -> crate::types::builders::DirectoryRegistrationSummaryBuilder {
        crate::types::builders::DirectoryRegistrationSummaryBuilder::default()
    }
}

/// A builder for [`DirectoryRegistrationSummary`](crate::types::DirectoryRegistrationSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DirectoryRegistrationSummaryBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) directory_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::DirectoryRegistrationStatus>,
    pub(crate) status_reason: ::std::option::Option<crate::types::DirectoryRegistrationStatusReason>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DirectoryRegistrationSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input; self
    }
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The identifier of the Active Directory.</p>
    pub fn directory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Active Directory.</p>
    pub fn set_directory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_id = input; self
    }
    /// <p>The identifier of the Active Directory.</p>
    pub fn get_directory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_id
    }
    /// <p>Status of the directory registration.</p>
    pub fn status(mut self, input: crate::types::DirectoryRegistrationStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status of the directory registration.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::DirectoryRegistrationStatus>) -> Self {
        self.status = input; self
    }
    /// <p>Status of the directory registration.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::DirectoryRegistrationStatus> {
        &self.status
    }
    /// <p>Additional information about the directory registration status if the status is failed.</p>
    pub fn status_reason(mut self, input: crate::types::DirectoryRegistrationStatusReason) -> Self {
        self.status_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>Additional information about the directory registration status if the status is failed.</p>
    pub fn set_status_reason(mut self, input: ::std::option::Option<crate::types::DirectoryRegistrationStatusReason>) -> Self {
        self.status_reason = input; self
    }
    /// <p>Additional information about the directory registration status if the status is failed.</p>
    pub fn get_status_reason(&self) -> &::std::option::Option<crate::types::DirectoryRegistrationStatusReason> {
        &self.status_reason
    }
    /// <p>The date and time that the directory registration was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the directory registration was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input; self
    }
    /// <p>The date and time that the directory registration was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The date and time that the directory registration was updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the directory registration was updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input; self
    }
    /// <p>The date and time that the directory registration was updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`DirectoryRegistrationSummary`](crate::types::DirectoryRegistrationSummary).
    pub fn build(self) -> crate::types::DirectoryRegistrationSummary {
        crate::types::DirectoryRegistrationSummary {
            arn: self.arn
            ,
            directory_id: self.directory_id
            ,
            status: self.status
            ,
            status_reason: self.status_reason
            ,
            created_at: self.created_at
            ,
            updated_at: self.updated_at
            ,
        }
    }
}

