// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Allow or deny permissions for an Active Directory group to enroll or autoenroll certificates for a template.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccessRights  {
    /// <p>Allow or deny an Active Directory group from enrolling certificates issued against a template.</p>
    pub enroll: ::std::option::Option<crate::types::AccessRight>,
    /// <p>Allow or deny an Active Directory group from autoenrolling certificates issued against a template. The Active Directory group must be allowed to enroll to allow autoenrollment</p>
    pub auto_enroll: ::std::option::Option<crate::types::AccessRight>,
}
impl  AccessRights  {
    /// <p>Allow or deny an Active Directory group from enrolling certificates issued against a template.</p>
    pub fn enroll(&self) -> ::std::option::Option<& crate::types::AccessRight> {
        self.enroll.as_ref()
    }
    /// <p>Allow or deny an Active Directory group from autoenrolling certificates issued against a template. The Active Directory group must be allowed to enroll to allow autoenrollment</p>
    pub fn auto_enroll(&self) -> ::std::option::Option<& crate::types::AccessRight> {
        self.auto_enroll.as_ref()
    }
}
impl AccessRights {
    /// Creates a new builder-style object to manufacture [`AccessRights`](crate::types::AccessRights).
    pub fn builder() -> crate::types::builders::AccessRightsBuilder {
        crate::types::builders::AccessRightsBuilder::default()
    }
}

/// A builder for [`AccessRights`](crate::types::AccessRights).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AccessRightsBuilder {
    pub(crate) enroll: ::std::option::Option<crate::types::AccessRight>,
    pub(crate) auto_enroll: ::std::option::Option<crate::types::AccessRight>,
}
impl AccessRightsBuilder {
    /// <p>Allow or deny an Active Directory group from enrolling certificates issued against a template.</p>
    pub fn enroll(mut self, input: crate::types::AccessRight) -> Self {
        self.enroll = ::std::option::Option::Some(input);
        self
    }
    /// <p>Allow or deny an Active Directory group from enrolling certificates issued against a template.</p>
    pub fn set_enroll(mut self, input: ::std::option::Option<crate::types::AccessRight>) -> Self {
        self.enroll = input; self
    }
    /// <p>Allow or deny an Active Directory group from enrolling certificates issued against a template.</p>
    pub fn get_enroll(&self) -> &::std::option::Option<crate::types::AccessRight> {
        &self.enroll
    }
    /// <p>Allow or deny an Active Directory group from autoenrolling certificates issued against a template. The Active Directory group must be allowed to enroll to allow autoenrollment</p>
    pub fn auto_enroll(mut self, input: crate::types::AccessRight) -> Self {
        self.auto_enroll = ::std::option::Option::Some(input);
        self
    }
    /// <p>Allow or deny an Active Directory group from autoenrolling certificates issued against a template. The Active Directory group must be allowed to enroll to allow autoenrollment</p>
    pub fn set_auto_enroll(mut self, input: ::std::option::Option<crate::types::AccessRight>) -> Self {
        self.auto_enroll = input; self
    }
    /// <p>Allow or deny an Active Directory group from autoenrolling certificates issued against a template. The Active Directory group must be allowed to enroll to allow autoenrollment</p>
    pub fn get_auto_enroll(&self) -> &::std::option::Option<crate::types::AccessRight> {
        &self.auto_enroll
    }
    /// Consumes the builder and constructs a [`AccessRights`](crate::types::AccessRights).
    pub fn build(self) -> crate::types::AccessRights {
        crate::types::AccessRights {
            enroll: self.enroll
            ,
            auto_enroll: self.auto_enroll
            ,
        }
    }
}

