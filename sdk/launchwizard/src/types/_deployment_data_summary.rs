// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the deployment data.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeploymentDataSummary  {
    /// <p>The name of the deployment</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the deployment.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the workload.</p>
    pub workload_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the workload deployment pattern.</p>
    pub pattern_name: ::std::option::Option<::std::string::String>,
    /// <p>The status of the deployment.</p>
    pub status: ::std::option::Option<crate::types::DeploymentStatus>,
    /// <p>The time the deployment was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl  DeploymentDataSummary  {
    /// <p>The name of the deployment</p>
    pub fn name(&self) -> ::std::option::Option<& str> {
        self.name.as_deref()
    }
    /// <p>The ID of the deployment.</p>
    pub fn id(&self) -> ::std::option::Option<& str> {
        self.id.as_deref()
    }
    /// <p>The name of the workload.</p>
    pub fn workload_name(&self) -> ::std::option::Option<& str> {
        self.workload_name.as_deref()
    }
    /// <p>The name of the workload deployment pattern.</p>
    pub fn pattern_name(&self) -> ::std::option::Option<& str> {
        self.pattern_name.as_deref()
    }
    /// <p>The status of the deployment.</p>
    pub fn status(&self) -> ::std::option::Option<& crate::types::DeploymentStatus> {
        self.status.as_ref()
    }
    /// <p>The time the deployment was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
}
impl DeploymentDataSummary {
    /// Creates a new builder-style object to manufacture [`DeploymentDataSummary`](crate::types::DeploymentDataSummary).
    pub fn builder() -> crate::types::builders::DeploymentDataSummaryBuilder {
        crate::types::builders::DeploymentDataSummaryBuilder::default()
    }
}

/// A builder for [`DeploymentDataSummary`](crate::types::DeploymentDataSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeploymentDataSummaryBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) workload_name: ::std::option::Option<::std::string::String>,
    pub(crate) pattern_name: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::DeploymentStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DeploymentDataSummaryBuilder {
    /// <p>The name of the deployment</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the deployment</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input; self
    }
    /// <p>The name of the deployment</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ID of the deployment.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the deployment.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    /// <p>The ID of the deployment.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the workload.</p>
    pub fn workload_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload.</p>
    pub fn set_workload_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_name = input; self
    }
    /// <p>The name of the workload.</p>
    pub fn get_workload_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_name
    }
    /// <p>The name of the workload deployment pattern.</p>
    pub fn pattern_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pattern_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload deployment pattern.</p>
    pub fn set_pattern_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pattern_name = input; self
    }
    /// <p>The name of the workload deployment pattern.</p>
    pub fn get_pattern_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pattern_name
    }
    /// <p>The status of the deployment.</p>
    pub fn status(mut self, input: crate::types::DeploymentStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the deployment.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::DeploymentStatus>) -> Self {
        self.status = input; self
    }
    /// <p>The status of the deployment.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::DeploymentStatus> {
        &self.status
    }
    /// <p>The time the deployment was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the deployment was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input; self
    }
    /// <p>The time the deployment was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// Consumes the builder and constructs a [`DeploymentDataSummary`](crate::types::DeploymentDataSummary).
    pub fn build(self) -> crate::types::DeploymentDataSummary {
        crate::types::DeploymentDataSummary {
            name: self.name
            ,
            id: self.id
            ,
            workload_name: self.workload_name
            ,
            pattern_name: self.pattern_name
            ,
            status: self.status
            ,
            created_at: self.created_at
            ,
        }
    }
}

