// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes workload data.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkloadDataSummary  {
    /// <p>The name of the workload.</p>
    pub workload_name: ::std::option::Option<::std::string::String>,
    /// <p>The display name of the workload data.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
}
impl  WorkloadDataSummary  {
    /// <p>The name of the workload.</p>
    pub fn workload_name(&self) -> ::std::option::Option<& str> {
        self.workload_name.as_deref()
    }
    /// <p>The display name of the workload data.</p>
    pub fn display_name(&self) -> ::std::option::Option<& str> {
        self.display_name.as_deref()
    }
}
impl WorkloadDataSummary {
    /// Creates a new builder-style object to manufacture [`WorkloadDataSummary`](crate::types::WorkloadDataSummary).
    pub fn builder() -> crate::types::builders::WorkloadDataSummaryBuilder {
        crate::types::builders::WorkloadDataSummaryBuilder::default()
    }
}

/// A builder for [`WorkloadDataSummary`](crate::types::WorkloadDataSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkloadDataSummaryBuilder {
    pub(crate) workload_name: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
}
impl WorkloadDataSummaryBuilder {
    /// <p>The name of the workload.</p>
    pub fn workload_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload.</p>
    pub fn set_workload_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_name = input; self
    }
    /// <p>The name of the workload.</p>
    pub fn get_workload_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_name
    }
    /// <p>The display name of the workload data.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the workload data.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input; self
    }
    /// <p>The display name of the workload data.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// Consumes the builder and constructs a [`WorkloadDataSummary`](crate::types::WorkloadDataSummary).
    pub fn build(self) -> crate::types::WorkloadDataSummary {
        crate::types::WorkloadDataSummary {
            workload_name: self.workload_name
            ,
            display_name: self.display_name
            ,
        }
    }
}

