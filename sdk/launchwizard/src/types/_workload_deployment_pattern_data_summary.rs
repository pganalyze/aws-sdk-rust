// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a workload deployment pattern.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkloadDeploymentPatternDataSummary  {
    /// <p>The name of the workload.</p>
    pub workload_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of a workload deployment pattern.</p>
    pub deployment_pattern_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the workload deployment pattern version.</p>
    pub workload_version_name: ::std::option::Option<::std::string::String>,
    /// <p>The display name of a workload deployment pattern.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The description of a workload deployment pattern.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The status of a workload deployment pattern.</p>
    pub status: ::std::option::Option<crate::types::WorkloadDeploymentPatternStatus>,
    /// <p>A message about a workload deployment pattern's status.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
}
impl  WorkloadDeploymentPatternDataSummary  {
    /// <p>The name of the workload.</p>
    pub fn workload_name(&self) -> ::std::option::Option<& str> {
        self.workload_name.as_deref()
    }
    /// <p>The name of a workload deployment pattern.</p>
    pub fn deployment_pattern_name(&self) -> ::std::option::Option<& str> {
        self.deployment_pattern_name.as_deref()
    }
    /// <p>The name of the workload deployment pattern version.</p>
    pub fn workload_version_name(&self) -> ::std::option::Option<& str> {
        self.workload_version_name.as_deref()
    }
    /// <p>The display name of a workload deployment pattern.</p>
    pub fn display_name(&self) -> ::std::option::Option<& str> {
        self.display_name.as_deref()
    }
    /// <p>The description of a workload deployment pattern.</p>
    pub fn description(&self) -> ::std::option::Option<& str> {
        self.description.as_deref()
    }
    /// <p>The status of a workload deployment pattern.</p>
    pub fn status(&self) -> ::std::option::Option<& crate::types::WorkloadDeploymentPatternStatus> {
        self.status.as_ref()
    }
    /// <p>A message about a workload deployment pattern's status.</p>
    pub fn status_message(&self) -> ::std::option::Option<& str> {
        self.status_message.as_deref()
    }
}
impl WorkloadDeploymentPatternDataSummary {
    /// Creates a new builder-style object to manufacture [`WorkloadDeploymentPatternDataSummary`](crate::types::WorkloadDeploymentPatternDataSummary).
    pub fn builder() -> crate::types::builders::WorkloadDeploymentPatternDataSummaryBuilder {
        crate::types::builders::WorkloadDeploymentPatternDataSummaryBuilder::default()
    }
}

/// A builder for [`WorkloadDeploymentPatternDataSummary`](crate::types::WorkloadDeploymentPatternDataSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkloadDeploymentPatternDataSummaryBuilder {
    pub(crate) workload_name: ::std::option::Option<::std::string::String>,
    pub(crate) deployment_pattern_name: ::std::option::Option<::std::string::String>,
    pub(crate) workload_version_name: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::WorkloadDeploymentPatternStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
}
impl WorkloadDeploymentPatternDataSummaryBuilder {
    /// <p>The name of the workload.</p>
    pub fn workload_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload.</p>
    pub fn set_workload_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_name = input; self
    }
    /// <p>The name of the workload.</p>
    pub fn get_workload_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_name
    }
    /// <p>The name of a workload deployment pattern.</p>
    pub fn deployment_pattern_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.deployment_pattern_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a workload deployment pattern.</p>
    pub fn set_deployment_pattern_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.deployment_pattern_name = input; self
    }
    /// <p>The name of a workload deployment pattern.</p>
    pub fn get_deployment_pattern_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.deployment_pattern_name
    }
    /// <p>The name of the workload deployment pattern version.</p>
    pub fn workload_version_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_version_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload deployment pattern version.</p>
    pub fn set_workload_version_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_version_name = input; self
    }
    /// <p>The name of the workload deployment pattern version.</p>
    pub fn get_workload_version_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_version_name
    }
    /// <p>The display name of a workload deployment pattern.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of a workload deployment pattern.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input; self
    }
    /// <p>The display name of a workload deployment pattern.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The description of a workload deployment pattern.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of a workload deployment pattern.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input; self
    }
    /// <p>The description of a workload deployment pattern.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The status of a workload deployment pattern.</p>
    pub fn status(mut self, input: crate::types::WorkloadDeploymentPatternStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of a workload deployment pattern.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::WorkloadDeploymentPatternStatus>) -> Self {
        self.status = input; self
    }
    /// <p>The status of a workload deployment pattern.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::WorkloadDeploymentPatternStatus> {
        &self.status
    }
    /// <p>A message about a workload deployment pattern's status.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message about a workload deployment pattern's status.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input; self
    }
    /// <p>A message about a workload deployment pattern's status.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// Consumes the builder and constructs a [`WorkloadDeploymentPatternDataSummary`](crate::types::WorkloadDeploymentPatternDataSummary).
    pub fn build(self) -> crate::types::WorkloadDeploymentPatternDataSummary {
        crate::types::WorkloadDeploymentPatternDataSummary {
            workload_name: self.workload_name
            ,
            deployment_pattern_name: self.deployment_pattern_name
            ,
            workload_version_name: self.workload_version_name
            ,
            display_name: self.display_name
            ,
            description: self.description
            ,
            status: self.status
            ,
            status_message: self.status_message
            ,
        }
    }
}

