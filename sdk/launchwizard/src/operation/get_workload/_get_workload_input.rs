// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetWorkloadInput  {
    /// <p>The name of the workload.</p>
    pub workload_name: ::std::option::Option<::std::string::String>,
}
impl  GetWorkloadInput  {
    /// <p>The name of the workload.</p>
    pub fn workload_name(&self) -> ::std::option::Option<& str> {
        self.workload_name.as_deref()
    }
}
impl GetWorkloadInput {
    /// Creates a new builder-style object to manufacture [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
    pub fn builder() -> crate::operation::get_workload::builders::GetWorkloadInputBuilder {
        crate::operation::get_workload::builders::GetWorkloadInputBuilder::default()
    }
}

/// A builder for [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetWorkloadInputBuilder {
    pub(crate) workload_name: ::std::option::Option<::std::string::String>,
}
impl GetWorkloadInputBuilder {
    /// <p>The name of the workload.</p>
    /// This field is required.
    pub fn workload_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workload.</p>
    pub fn set_workload_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_name = input; self
    }
    /// <p>The name of the workload.</p>
    pub fn get_workload_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_name
    }
    /// Consumes the builder and constructs a [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_workload::GetWorkloadInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::get_workload::GetWorkloadInput {
                workload_name: self.workload_name
                ,
            }
        )
    }
}

