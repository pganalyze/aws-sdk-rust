// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Use filters to focus the returned annotation store versions on a specific parameter, such as the status of the annotation store. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAnnotationStoreVersionsFilter  {
    /// <p> The status of an annotation store version. </p>
    pub status: ::std::option::Option<crate::types::VersionStatus>,
}
impl  ListAnnotationStoreVersionsFilter  {
    /// <p> The status of an annotation store version. </p>
    pub fn status(&self) -> ::std::option::Option<& crate::types::VersionStatus> {
        self.status.as_ref()
    }
}
impl ListAnnotationStoreVersionsFilter {
    /// Creates a new builder-style object to manufacture [`ListAnnotationStoreVersionsFilter`](crate::types::ListAnnotationStoreVersionsFilter).
    pub fn builder() -> crate::types::builders::ListAnnotationStoreVersionsFilterBuilder {
        crate::types::builders::ListAnnotationStoreVersionsFilterBuilder::default()
    }
}

/// A builder for [`ListAnnotationStoreVersionsFilter`](crate::types::ListAnnotationStoreVersionsFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListAnnotationStoreVersionsFilterBuilder {
    pub(crate) status: ::std::option::Option<crate::types::VersionStatus>,
}
impl ListAnnotationStoreVersionsFilterBuilder {
    /// <p> The status of an annotation store version. </p>
    pub fn status(mut self, input: crate::types::VersionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p> The status of an annotation store version. </p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::VersionStatus>) -> Self {
        self.status = input; self
    }
    /// <p> The status of an annotation store version. </p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::VersionStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`ListAnnotationStoreVersionsFilter`](crate::types::ListAnnotationStoreVersionsFilter).
    pub fn build(self) -> crate::types::ListAnnotationStoreVersionsFilter {
        crate::types::ListAnnotationStoreVersionsFilter {
            status: self.status
            ,
        }
    }
}

