// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the error that resulted in failure of the job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaAnalysisJobFailureDetails  {
    /// <p>Error code for the failed job.</p>
    pub code: ::std::option::Option<crate::types::MediaAnalysisJobFailureCode>,
    /// <p>Human readable error message.</p>
    pub message: ::std::option::Option<::std::string::String>,
}
impl  MediaAnalysisJobFailureDetails  {
    /// <p>Error code for the failed job.</p>
    pub fn code(&self) -> ::std::option::Option<& crate::types::MediaAnalysisJobFailureCode> {
        self.code.as_ref()
    }
    /// <p>Human readable error message.</p>
    pub fn message(&self) -> ::std::option::Option<& str> {
        self.message.as_deref()
    }
}
impl MediaAnalysisJobFailureDetails {
    /// Creates a new builder-style object to manufacture [`MediaAnalysisJobFailureDetails`](crate::types::MediaAnalysisJobFailureDetails).
    pub fn builder() -> crate::types::builders::MediaAnalysisJobFailureDetailsBuilder {
        crate::types::builders::MediaAnalysisJobFailureDetailsBuilder::default()
    }
}

/// A builder for [`MediaAnalysisJobFailureDetails`](crate::types::MediaAnalysisJobFailureDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MediaAnalysisJobFailureDetailsBuilder {
    pub(crate) code: ::std::option::Option<crate::types::MediaAnalysisJobFailureCode>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl MediaAnalysisJobFailureDetailsBuilder {
    /// <p>Error code for the failed job.</p>
    pub fn code(mut self, input: crate::types::MediaAnalysisJobFailureCode) -> Self {
        self.code = ::std::option::Option::Some(input);
        self
    }
    /// <p>Error code for the failed job.</p>
    pub fn set_code(mut self, input: ::std::option::Option<crate::types::MediaAnalysisJobFailureCode>) -> Self {
        self.code = input; self
    }
    /// <p>Error code for the failed job.</p>
    pub fn get_code(&self) -> &::std::option::Option<crate::types::MediaAnalysisJobFailureCode> {
        &self.code
    }
    /// <p>Human readable error message.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Human readable error message.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input; self
    }
    /// <p>Human readable error message.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`MediaAnalysisJobFailureDetails`](crate::types::MediaAnalysisJobFailureDetails).
    pub fn build(self) -> crate::types::MediaAnalysisJobFailureDetails {
        crate::types::MediaAnalysisJobFailureDetails {
            code: self.code
            ,
            message: self.message
            ,
        }
    }
}

