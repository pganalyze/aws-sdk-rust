// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The number of messages that can be sent to an endpoint during the specified timeframe for all journeys.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JourneyTimeframeCap  {
    /// <p>The maximum number of messages that all journeys can send to an endpoint during the specified timeframe. The maximum value is 100. If set to 0, this limit will not apply.</p>
    pub cap: ::std::option::Option<i32>,
    /// <p>The length of the timeframe in days. The maximum value is 30. If set to 0, this limit will not apply.</p>
    pub days: ::std::option::Option<i32>,
}
impl  JourneyTimeframeCap  {
    /// <p>The maximum number of messages that all journeys can send to an endpoint during the specified timeframe. The maximum value is 100. If set to 0, this limit will not apply.</p>
    pub fn cap(&self) -> ::std::option::Option<i32> {
        self.cap
    }
    /// <p>The length of the timeframe in days. The maximum value is 30. If set to 0, this limit will not apply.</p>
    pub fn days(&self) -> ::std::option::Option<i32> {
        self.days
    }
}
impl JourneyTimeframeCap {
    /// Creates a new builder-style object to manufacture [`JourneyTimeframeCap`](crate::types::JourneyTimeframeCap).
    pub fn builder() -> crate::types::builders::JourneyTimeframeCapBuilder {
        crate::types::builders::JourneyTimeframeCapBuilder::default()
    }
}

/// A builder for [`JourneyTimeframeCap`](crate::types::JourneyTimeframeCap).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct JourneyTimeframeCapBuilder {
    pub(crate) cap: ::std::option::Option<i32>,
    pub(crate) days: ::std::option::Option<i32>,
}
impl JourneyTimeframeCapBuilder {
    /// <p>The maximum number of messages that all journeys can send to an endpoint during the specified timeframe. The maximum value is 100. If set to 0, this limit will not apply.</p>
    pub fn cap(mut self, input: i32) -> Self {
        self.cap = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of messages that all journeys can send to an endpoint during the specified timeframe. The maximum value is 100. If set to 0, this limit will not apply.</p>
    pub fn set_cap(mut self, input: ::std::option::Option<i32>) -> Self {
        self.cap = input; self
    }
    /// <p>The maximum number of messages that all journeys can send to an endpoint during the specified timeframe. The maximum value is 100. If set to 0, this limit will not apply.</p>
    pub fn get_cap(&self) -> &::std::option::Option<i32> {
        &self.cap
    }
    /// <p>The length of the timeframe in days. The maximum value is 30. If set to 0, this limit will not apply.</p>
    pub fn days(mut self, input: i32) -> Self {
        self.days = ::std::option::Option::Some(input);
        self
    }
    /// <p>The length of the timeframe in days. The maximum value is 30. If set to 0, this limit will not apply.</p>
    pub fn set_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.days = input; self
    }
    /// <p>The length of the timeframe in days. The maximum value is 30. If set to 0, this limit will not apply.</p>
    pub fn get_days(&self) -> &::std::option::Option<i32> {
        &self.days
    }
    /// Consumes the builder and constructs a [`JourneyTimeframeCap`](crate::types::JourneyTimeframeCap).
    pub fn build(self) -> crate::types::JourneyTimeframeCap {
        crate::types::JourneyTimeframeCap {
            cap: self.cap
            ,
            days: self.days
            ,
        }
    }
}

