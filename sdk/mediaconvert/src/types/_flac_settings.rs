// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Required when you set Codec, under AudioDescriptions&gt;CodecSettings, to the value FLAC.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlacSettings  {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub bit_depth: ::std::option::Option<i32>,
    /// Specify the number of channels in this output audio track. Choosing Mono on the console gives you 1 output channel; choosing Stereo gives you 2. In the API, valid values are between 1 and 8.
    pub channels: ::std::option::Option<i32>,
    /// Sample rate in Hz.
    pub sample_rate: ::std::option::Option<i32>,
}
impl  FlacSettings  {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn bit_depth(&self) -> ::std::option::Option<i32> {
        self.bit_depth
    }
    /// Specify the number of channels in this output audio track. Choosing Mono on the console gives you 1 output channel; choosing Stereo gives you 2. In the API, valid values are between 1 and 8.
    pub fn channels(&self) -> ::std::option::Option<i32> {
        self.channels
    }
    /// Sample rate in Hz.
    pub fn sample_rate(&self) -> ::std::option::Option<i32> {
        self.sample_rate
    }
}
impl FlacSettings {
    /// Creates a new builder-style object to manufacture [`FlacSettings`](crate::types::FlacSettings).
    pub fn builder() -> crate::types::builders::FlacSettingsBuilder {
        crate::types::builders::FlacSettingsBuilder::default()
    }
}

/// A builder for [`FlacSettings`](crate::types::FlacSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FlacSettingsBuilder {
    pub(crate) bit_depth: ::std::option::Option<i32>,
    pub(crate) channels: ::std::option::Option<i32>,
    pub(crate) sample_rate: ::std::option::Option<i32>,
}
impl FlacSettingsBuilder {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn bit_depth(mut self, input: i32) -> Self {
        self.bit_depth = ::std::option::Option::Some(input);
        self
    }
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn set_bit_depth(mut self, input: ::std::option::Option<i32>) -> Self {
        self.bit_depth = input; self
    }
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn get_bit_depth(&self) -> &::std::option::Option<i32> {
        &self.bit_depth
    }
    /// Specify the number of channels in this output audio track. Choosing Mono on the console gives you 1 output channel; choosing Stereo gives you 2. In the API, valid values are between 1 and 8.
    pub fn channels(mut self, input: i32) -> Self {
        self.channels = ::std::option::Option::Some(input);
        self
    }
    /// Specify the number of channels in this output audio track. Choosing Mono on the console gives you 1 output channel; choosing Stereo gives you 2. In the API, valid values are between 1 and 8.
    pub fn set_channels(mut self, input: ::std::option::Option<i32>) -> Self {
        self.channels = input; self
    }
    /// Specify the number of channels in this output audio track. Choosing Mono on the console gives you 1 output channel; choosing Stereo gives you 2. In the API, valid values are between 1 and 8.
    pub fn get_channels(&self) -> &::std::option::Option<i32> {
        &self.channels
    }
    /// Sample rate in Hz.
    pub fn sample_rate(mut self, input: i32) -> Self {
        self.sample_rate = ::std::option::Option::Some(input);
        self
    }
    /// Sample rate in Hz.
    pub fn set_sample_rate(mut self, input: ::std::option::Option<i32>) -> Self {
        self.sample_rate = input; self
    }
    /// Sample rate in Hz.
    pub fn get_sample_rate(&self) -> &::std::option::Option<i32> {
        &self.sample_rate
    }
    /// Consumes the builder and constructs a [`FlacSettings`](crate::types::FlacSettings).
    pub fn build(self) -> crate::types::FlacSettings {
        crate::types::FlacSettings {
            bit_depth: self.bit_depth
            ,
            channels: self.channels
            ,
            sample_rate: self.sample_rate
            ,
        }
    }
}

