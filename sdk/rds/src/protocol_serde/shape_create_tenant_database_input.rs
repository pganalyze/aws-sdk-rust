// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_tenant_database_input_input_input(input: &crate::operation::create_tenant_database::CreateTenantDatabaseInput) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "CreateTenantDatabase", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DBInstanceIdentifier");
    if let Some(var_2) = &input.db_instance_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TenantDBName");
    if let Some(var_4) = &input.tenant_db_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("MasterUsername");
    if let Some(var_6) = &input.master_username {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("MasterUserPassword");
    if let Some(var_8) = &input.master_user_password {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("CharacterSetName");
    if let Some(var_10) = &input.character_set_name {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("NcharCharacterSetName");
    if let Some(var_12) = &input.nchar_character_set_name {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("Tags");
    if let Some(var_14) = &input.tags {
        let mut list_16 = scope_13.start_list(false, Some("Tag"));
        for item_15 in var_14 {
            #[allow(unused_mut)]
            let mut entry_17 = list_16.entry();
            crate::protocol_serde::shape_tag::ser_tag(entry_17, item_15)?;
        }
        list_16.finish();
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}

