// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyTenantDatabase`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::set_db_instance_identifier):<br>required: **true**<br><p>The identifier of the DB instance that contains the tenant database that you are modifying. This parameter isn't case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the identifier of an existing DB instance.</p> </li>  </ul><br>
    ///   - [`tenant_db_name(impl Into<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::tenant_db_name) / [`set_tenant_db_name(Option<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::set_tenant_db_name):<br>required: **true**<br><p>The user-supplied name of the tenant database that you want to modify. This parameter isn’t case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the identifier of an existing tenant database.</p> </li>  </ul><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::set_master_user_password):<br>required: **false**<br><p>The new password for the master user of the specified tenant database in your DB instance.</p> <note>   <p>Amazon RDS operations never return the password, so this action provides a way to regain access to a tenant database user if the password is lost. This includes restoring privileges that might have been accidentally revoked.</p>  </note>  <p>Constraints:</p>  <ul>   <li> <p>Can include any printable ASCII character except <code>/</code>, <code>"</code> (double quote), <code>@</code>, <code>&amp;</code> (ampersand), and <code>'</code> (single quote).</p> </li>  </ul>  <p>Length constraints:</p>  <ul>   <li> <p>Must contain between 8 and 30 characters. </p> </li>  </ul><br>
    ///   - [`new_tenant_db_name(impl Into<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::new_tenant_db_name) / [`set_new_tenant_db_name(Option<String>)`](crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::set_new_tenant_db_name):<br>required: **false**<br><p>The new name of the tenant database when renaming a tenant database. This parameter isn’t case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be the string null or any other reserved word.</p> </li>   <li> <p>Can't be longer than 8 characters.</p> </li>  </ul><br>
                            /// - On success, responds with [`ModifyTenantDatabaseOutput`](crate::operation::modify_tenant_database::ModifyTenantDatabaseOutput) with field(s):
    ///   - [`tenant_database(Option<TenantDatabase>)`](crate::operation::modify_tenant_database::ModifyTenantDatabaseOutput::tenant_database): <p>A tenant database in the DB instance. This data type is an element in the response to the <code>DescribeTenantDatabases</code> action.</p>
                            /// - On failure, responds with [`SdkError<ModifyTenantDatabaseError>`](crate::operation::modify_tenant_database::ModifyTenantDatabaseError)
    pub fn modify_tenant_database(&self) -> crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder {
                                crate::operation::modify_tenant_database::builders::ModifyTenantDatabaseFluentBuilder::new(self.handle.clone())
                            }
}

