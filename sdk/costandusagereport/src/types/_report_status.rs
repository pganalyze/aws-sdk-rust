// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A two element dictionary with a <code>lastDelivery</code> and <code>lastStatus</code> key whose values describe the date and status of the last delivered report for a particular report definition.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReportStatus  {
    /// <p>A timestamp that gives the date of a report delivery.</p>
    pub last_delivery: ::std::option::Option<::std::string::String>,
    /// <p>An enum that gives the status of a report delivery.</p>
    pub last_status: ::std::option::Option<crate::types::LastStatus>,
}
impl  ReportStatus  {
    /// <p>A timestamp that gives the date of a report delivery.</p>
    pub fn last_delivery(&self) -> ::std::option::Option<& str> {
        self.last_delivery.as_deref()
    }
    /// <p>An enum that gives the status of a report delivery.</p>
    pub fn last_status(&self) -> ::std::option::Option<& crate::types::LastStatus> {
        self.last_status.as_ref()
    }
}
impl ReportStatus {
    /// Creates a new builder-style object to manufacture [`ReportStatus`](crate::types::ReportStatus).
    pub fn builder() -> crate::types::builders::ReportStatusBuilder {
        crate::types::builders::ReportStatusBuilder::default()
    }
}

/// A builder for [`ReportStatus`](crate::types::ReportStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReportStatusBuilder {
    pub(crate) last_delivery: ::std::option::Option<::std::string::String>,
    pub(crate) last_status: ::std::option::Option<crate::types::LastStatus>,
}
impl ReportStatusBuilder {
    /// <p>A timestamp that gives the date of a report delivery.</p>
    pub fn last_delivery(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_delivery = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A timestamp that gives the date of a report delivery.</p>
    pub fn set_last_delivery(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_delivery = input; self
    }
    /// <p>A timestamp that gives the date of a report delivery.</p>
    pub fn get_last_delivery(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_delivery
    }
    /// <p>An enum that gives the status of a report delivery.</p>
    pub fn last_status(mut self, input: crate::types::LastStatus) -> Self {
        self.last_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>An enum that gives the status of a report delivery.</p>
    pub fn set_last_status(mut self, input: ::std::option::Option<crate::types::LastStatus>) -> Self {
        self.last_status = input; self
    }
    /// <p>An enum that gives the status of a report delivery.</p>
    pub fn get_last_status(&self) -> &::std::option::Option<crate::types::LastStatus> {
        &self.last_status
    }
    /// Consumes the builder and constructs a [`ReportStatus`](crate::types::ReportStatus).
    pub fn build(self) -> crate::types::ReportStatus {
        crate::types::ReportStatus {
            last_delivery: self.last_delivery
            ,
            last_status: self.last_status
            ,
        }
    }
}

