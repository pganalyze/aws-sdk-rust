// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics about the execution of an export job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportStatistics  {
    /// <p>The number of records that were processed to generate the final export file.</p>
    pub processed_records_count: ::std::option::Option<i32>,
    /// <p>The number of records that were exported to the final export file.</p> 
    /// <p>This value might not be available for all export source types</p>
    pub exported_records_count: ::std::option::Option<i32>,
}
impl  ExportStatistics  {
    /// <p>The number of records that were processed to generate the final export file.</p>
    pub fn processed_records_count(&self) -> ::std::option::Option<i32> {
        self.processed_records_count
    }
    /// <p>The number of records that were exported to the final export file.</p> 
    /// <p>This value might not be available for all export source types</p>
    pub fn exported_records_count(&self) -> ::std::option::Option<i32> {
        self.exported_records_count
    }
}
impl ExportStatistics {
    /// Creates a new builder-style object to manufacture [`ExportStatistics`](crate::types::ExportStatistics).
    pub fn builder() -> crate::types::builders::ExportStatisticsBuilder {
        crate::types::builders::ExportStatisticsBuilder::default()
    }
}

/// A builder for [`ExportStatistics`](crate::types::ExportStatistics).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportStatisticsBuilder {
    pub(crate) processed_records_count: ::std::option::Option<i32>,
    pub(crate) exported_records_count: ::std::option::Option<i32>,
}
impl ExportStatisticsBuilder {
    /// <p>The number of records that were processed to generate the final export file.</p>
    pub fn processed_records_count(mut self, input: i32) -> Self {
        self.processed_records_count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of records that were processed to generate the final export file.</p>
    pub fn set_processed_records_count(mut self, input: ::std::option::Option<i32>) -> Self {
        self.processed_records_count = input; self
    }
    /// <p>The number of records that were processed to generate the final export file.</p>
    pub fn get_processed_records_count(&self) -> &::std::option::Option<i32> {
        &self.processed_records_count
    }
    /// <p>The number of records that were exported to the final export file.</p> 
    /// <p>This value might not be available for all export source types</p>
    pub fn exported_records_count(mut self, input: i32) -> Self {
        self.exported_records_count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of records that were exported to the final export file.</p> 
    /// <p>This value might not be available for all export source types</p>
    pub fn set_exported_records_count(mut self, input: ::std::option::Option<i32>) -> Self {
        self.exported_records_count = input; self
    }
    /// <p>The number of records that were exported to the final export file.</p> 
    /// <p>This value might not be available for all export source types</p>
    pub fn get_exported_records_count(&self) -> &::std::option::Option<i32> {
        &self.exported_records_count
    }
    /// Consumes the builder and constructs a [`ExportStatistics`](crate::types::ExportStatistics).
    pub fn build(self) -> crate::types::ExportStatistics {
        crate::types::ExportStatistics {
            processed_records_count: self.processed_records_count
            ,
            exported_records_count: self.exported_records_count
            ,
        }
    }
}

