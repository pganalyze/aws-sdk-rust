// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains additional information about the verification status for the identity.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VerificationInfo  {
    /// <p>The last time a verification attempt was made for this identity.</p>
    pub last_checked_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The last time a successful verification was made for this identity.</p>
    pub last_success_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Provides the reason for the failure describing why Amazon SES was not able to successfully verify the identity. Below are the possible values: </p> 
    /// <ul> 
    /// <li> <p> <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the value contained within the record was invalid. Ensure you have published the correct values for the record.</p> </li> 
    /// <li> <p> <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not have the requested type of DNS record. Ensure that you have published the correct type of DNS record.</p> </li> 
    /// <li> <p> <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was not reachable at the time of the request. Ensure that you have published the required DNS record(s). </p> </li> 
    /// <li> <p> <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from determining the verification status of the domain.</p> </li> 
    /// <li> <p> <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and was unable to complete the request.</p> </li> 
    /// </ul>
    pub error_type: ::std::option::Option<crate::types::VerificationError>,
    /// <p>An object that contains information about the start of authority (SOA) record associated with the identity.</p>
    pub soa_record: ::std::option::Option<crate::types::SoaRecord>,
}
impl  VerificationInfo  {
    /// <p>The last time a verification attempt was made for this identity.</p>
    pub fn last_checked_timestamp(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.last_checked_timestamp.as_ref()
    }
    /// <p>The last time a successful verification was made for this identity.</p>
    pub fn last_success_timestamp(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.last_success_timestamp.as_ref()
    }
    /// <p>Provides the reason for the failure describing why Amazon SES was not able to successfully verify the identity. Below are the possible values: </p> 
    /// <ul> 
    /// <li> <p> <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the value contained within the record was invalid. Ensure you have published the correct values for the record.</p> </li> 
    /// <li> <p> <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not have the requested type of DNS record. Ensure that you have published the correct type of DNS record.</p> </li> 
    /// <li> <p> <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was not reachable at the time of the request. Ensure that you have published the required DNS record(s). </p> </li> 
    /// <li> <p> <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from determining the verification status of the domain.</p> </li> 
    /// <li> <p> <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and was unable to complete the request.</p> </li> 
    /// </ul>
    pub fn error_type(&self) -> ::std::option::Option<& crate::types::VerificationError> {
        self.error_type.as_ref()
    }
    /// <p>An object that contains information about the start of authority (SOA) record associated with the identity.</p>
    pub fn soa_record(&self) -> ::std::option::Option<& crate::types::SoaRecord> {
        self.soa_record.as_ref()
    }
}
impl VerificationInfo {
    /// Creates a new builder-style object to manufacture [`VerificationInfo`](crate::types::VerificationInfo).
    pub fn builder() -> crate::types::builders::VerificationInfoBuilder {
        crate::types::builders::VerificationInfoBuilder::default()
    }
}

/// A builder for [`VerificationInfo`](crate::types::VerificationInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VerificationInfoBuilder {
    pub(crate) last_checked_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_success_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) error_type: ::std::option::Option<crate::types::VerificationError>,
    pub(crate) soa_record: ::std::option::Option<crate::types::SoaRecord>,
}
impl VerificationInfoBuilder {
    /// <p>The last time a verification attempt was made for this identity.</p>
    pub fn last_checked_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_checked_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last time a verification attempt was made for this identity.</p>
    pub fn set_last_checked_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_checked_timestamp = input; self
    }
    /// <p>The last time a verification attempt was made for this identity.</p>
    pub fn get_last_checked_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_checked_timestamp
    }
    /// <p>The last time a successful verification was made for this identity.</p>
    pub fn last_success_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_success_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last time a successful verification was made for this identity.</p>
    pub fn set_last_success_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_success_timestamp = input; self
    }
    /// <p>The last time a successful verification was made for this identity.</p>
    pub fn get_last_success_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_success_timestamp
    }
    /// <p>Provides the reason for the failure describing why Amazon SES was not able to successfully verify the identity. Below are the possible values: </p> 
    /// <ul> 
    /// <li> <p> <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the value contained within the record was invalid. Ensure you have published the correct values for the record.</p> </li> 
    /// <li> <p> <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not have the requested type of DNS record. Ensure that you have published the correct type of DNS record.</p> </li> 
    /// <li> <p> <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was not reachable at the time of the request. Ensure that you have published the required DNS record(s). </p> </li> 
    /// <li> <p> <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from determining the verification status of the domain.</p> </li> 
    /// <li> <p> <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and was unable to complete the request.</p> </li> 
    /// </ul>
    pub fn error_type(mut self, input: crate::types::VerificationError) -> Self {
        self.error_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides the reason for the failure describing why Amazon SES was not able to successfully verify the identity. Below are the possible values: </p> 
    /// <ul> 
    /// <li> <p> <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the value contained within the record was invalid. Ensure you have published the correct values for the record.</p> </li> 
    /// <li> <p> <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not have the requested type of DNS record. Ensure that you have published the correct type of DNS record.</p> </li> 
    /// <li> <p> <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was not reachable at the time of the request. Ensure that you have published the required DNS record(s). </p> </li> 
    /// <li> <p> <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from determining the verification status of the domain.</p> </li> 
    /// <li> <p> <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and was unable to complete the request.</p> </li> 
    /// </ul>
    pub fn set_error_type(mut self, input: ::std::option::Option<crate::types::VerificationError>) -> Self {
        self.error_type = input; self
    }
    /// <p>Provides the reason for the failure describing why Amazon SES was not able to successfully verify the identity. Below are the possible values: </p> 
    /// <ul> 
    /// <li> <p> <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the value contained within the record was invalid. Ensure you have published the correct values for the record.</p> </li> 
    /// <li> <p> <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not have the requested type of DNS record. Ensure that you have published the correct type of DNS record.</p> </li> 
    /// <li> <p> <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was not reachable at the time of the request. Ensure that you have published the required DNS record(s). </p> </li> 
    /// <li> <p> <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from determining the verification status of the domain.</p> </li> 
    /// <li> <p> <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and was unable to complete the request.</p> </li> 
    /// </ul>
    pub fn get_error_type(&self) -> &::std::option::Option<crate::types::VerificationError> {
        &self.error_type
    }
    /// <p>An object that contains information about the start of authority (SOA) record associated with the identity.</p>
    pub fn soa_record(mut self, input: crate::types::SoaRecord) -> Self {
        self.soa_record = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains information about the start of authority (SOA) record associated with the identity.</p>
    pub fn set_soa_record(mut self, input: ::std::option::Option<crate::types::SoaRecord>) -> Self {
        self.soa_record = input; self
    }
    /// <p>An object that contains information about the start of authority (SOA) record associated with the identity.</p>
    pub fn get_soa_record(&self) -> &::std::option::Option<crate::types::SoaRecord> {
        &self.soa_record
    }
    /// Consumes the builder and constructs a [`VerificationInfo`](crate::types::VerificationInfo).
    pub fn build(self) -> crate::types::VerificationInfo {
        crate::types::VerificationInfo {
            last_checked_timestamp: self.last_checked_timestamp
            ,
            last_success_timestamp: self.last_success_timestamp
            ,
            error_type: self.error_type
            ,
            soa_record: self.soa_record
            ,
        }
    }
}

