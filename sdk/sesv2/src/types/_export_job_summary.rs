// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the export job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportJobSummary  {
    /// <p>The export job ID.</p>
    pub job_id: ::std::option::Option<::std::string::String>,
    /// <p>The source type of the export job.</p>
    pub export_source_type: ::std::option::Option<crate::types::ExportSourceType>,
    /// <p>The status of the export job.</p>
    pub job_status: ::std::option::Option<crate::types::JobStatus>,
    /// <p>The timestamp of when the export job was created.</p>
    pub created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of when the export job was completed.</p>
    pub completed_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl  ExportJobSummary  {
    /// <p>The export job ID.</p>
    pub fn job_id(&self) -> ::std::option::Option<& str> {
        self.job_id.as_deref()
    }
    /// <p>The source type of the export job.</p>
    pub fn export_source_type(&self) -> ::std::option::Option<& crate::types::ExportSourceType> {
        self.export_source_type.as_ref()
    }
    /// <p>The status of the export job.</p>
    pub fn job_status(&self) -> ::std::option::Option<& crate::types::JobStatus> {
        self.job_status.as_ref()
    }
    /// <p>The timestamp of when the export job was created.</p>
    pub fn created_timestamp(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
    /// <p>The timestamp of when the export job was completed.</p>
    pub fn completed_timestamp(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.completed_timestamp.as_ref()
    }
}
impl ExportJobSummary {
    /// Creates a new builder-style object to manufacture [`ExportJobSummary`](crate::types::ExportJobSummary).
    pub fn builder() -> crate::types::builders::ExportJobSummaryBuilder {
        crate::types::builders::ExportJobSummaryBuilder::default()
    }
}

/// A builder for [`ExportJobSummary`](crate::types::ExportJobSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportJobSummaryBuilder {
    pub(crate) job_id: ::std::option::Option<::std::string::String>,
    pub(crate) export_source_type: ::std::option::Option<crate::types::ExportSourceType>,
    pub(crate) job_status: ::std::option::Option<crate::types::JobStatus>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completed_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExportJobSummaryBuilder {
    /// <p>The export job ID.</p>
    pub fn job_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The export job ID.</p>
    pub fn set_job_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_id = input; self
    }
    /// <p>The export job ID.</p>
    pub fn get_job_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_id
    }
    /// <p>The source type of the export job.</p>
    pub fn export_source_type(mut self, input: crate::types::ExportSourceType) -> Self {
        self.export_source_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source type of the export job.</p>
    pub fn set_export_source_type(mut self, input: ::std::option::Option<crate::types::ExportSourceType>) -> Self {
        self.export_source_type = input; self
    }
    /// <p>The source type of the export job.</p>
    pub fn get_export_source_type(&self) -> &::std::option::Option<crate::types::ExportSourceType> {
        &self.export_source_type
    }
    /// <p>The status of the export job.</p>
    pub fn job_status(mut self, input: crate::types::JobStatus) -> Self {
        self.job_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the export job.</p>
    pub fn set_job_status(mut self, input: ::std::option::Option<crate::types::JobStatus>) -> Self {
        self.job_status = input; self
    }
    /// <p>The status of the export job.</p>
    pub fn get_job_status(&self) -> &::std::option::Option<crate::types::JobStatus> {
        &self.job_status
    }
    /// <p>The timestamp of when the export job was created.</p>
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the export job was created.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input; self
    }
    /// <p>The timestamp of when the export job was created.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// <p>The timestamp of when the export job was completed.</p>
    pub fn completed_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completed_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the export job was completed.</p>
    pub fn set_completed_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completed_timestamp = input; self
    }
    /// <p>The timestamp of when the export job was completed.</p>
    pub fn get_completed_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completed_timestamp
    }
    /// Consumes the builder and constructs a [`ExportJobSummary`](crate::types::ExportJobSummary).
    pub fn build(self) -> crate::types::ExportJobSummary {
        crate::types::ExportJobSummary {
            job_id: self.job_id
            ,
            export_source_type: self.export_source_type
            ,
            job_status: self.job_status
            ,
            created_timestamp: self.created_timestamp
            ,
            completed_timestamp: self.completed_timestamp
            ,
        }
    }
}

