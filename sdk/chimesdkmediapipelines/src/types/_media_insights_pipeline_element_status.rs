// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the pipeline element.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaInsightsPipelineElementStatus  {
    /// <p>The type of status.</p>
    pub r#type: ::std::option::Option<crate::types::MediaInsightsPipelineConfigurationElementType>,
    /// <p>The element's status.</p>
    pub status: ::std::option::Option<crate::types::MediaPipelineElementStatus>,
}
impl  MediaInsightsPipelineElementStatus  {
    /// <p>The type of status.</p>
    pub fn r#type(&self) -> ::std::option::Option<& crate::types::MediaInsightsPipelineConfigurationElementType> {
        self.r#type.as_ref()
    }
    /// <p>The element's status.</p>
    pub fn status(&self) -> ::std::option::Option<& crate::types::MediaPipelineElementStatus> {
        self.status.as_ref()
    }
}
impl MediaInsightsPipelineElementStatus {
    /// Creates a new builder-style object to manufacture [`MediaInsightsPipelineElementStatus`](crate::types::MediaInsightsPipelineElementStatus).
    pub fn builder() -> crate::types::builders::MediaInsightsPipelineElementStatusBuilder {
        crate::types::builders::MediaInsightsPipelineElementStatusBuilder::default()
    }
}

/// A builder for [`MediaInsightsPipelineElementStatus`](crate::types::MediaInsightsPipelineElementStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MediaInsightsPipelineElementStatusBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::MediaInsightsPipelineConfigurationElementType>,
    pub(crate) status: ::std::option::Option<crate::types::MediaPipelineElementStatus>,
}
impl MediaInsightsPipelineElementStatusBuilder {
    /// <p>The type of status.</p>
    pub fn r#type(mut self, input: crate::types::MediaInsightsPipelineConfigurationElementType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of status.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::MediaInsightsPipelineConfigurationElementType>) -> Self {
        self.r#type = input; self
    }
    /// <p>The type of status.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::MediaInsightsPipelineConfigurationElementType> {
        &self.r#type
    }
    /// <p>The element's status.</p>
    pub fn status(mut self, input: crate::types::MediaPipelineElementStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The element's status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::MediaPipelineElementStatus>) -> Self {
        self.status = input; self
    }
    /// <p>The element's status.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::MediaPipelineElementStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`MediaInsightsPipelineElementStatus`](crate::types::MediaInsightsPipelineElementStatus).
    pub fn build(self) -> crate::types::MediaInsightsPipelineElementStatus {
        crate::types::MediaInsightsPipelineElementStatus {
            r#type: self.r#type
            ,
            status: self.status
            ,
        }
    }
}

