// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportMetadataModelAssessmentOutput  {
    /// <p>The Amazon S3 details for an assessment exported in PDF format.</p>
    pub pdf_report: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>,
    /// <p>The Amazon S3 details for an assessment exported in CSV format.</p>
    pub csv_report: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>,
    _request_id: Option<String>,
}
impl  ExportMetadataModelAssessmentOutput  {
    /// <p>The Amazon S3 details for an assessment exported in PDF format.</p>
    pub fn pdf_report(&self) -> ::std::option::Option<& crate::types::ExportMetadataModelAssessmentResultEntry> {
        self.pdf_report.as_ref()
    }
    /// <p>The Amazon S3 details for an assessment exported in CSV format.</p>
    pub fn csv_report(&self) -> ::std::option::Option<& crate::types::ExportMetadataModelAssessmentResultEntry> {
        self.csv_report.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for ExportMetadataModelAssessmentOutput {
                                fn request_id(&self) -> Option<&str> {
                                    self._request_id.as_deref()
                                }
                            }
impl ExportMetadataModelAssessmentOutput {
    /// Creates a new builder-style object to manufacture [`ExportMetadataModelAssessmentOutput`](crate::operation::export_metadata_model_assessment::ExportMetadataModelAssessmentOutput).
    pub fn builder() -> crate::operation::export_metadata_model_assessment::builders::ExportMetadataModelAssessmentOutputBuilder {
        crate::operation::export_metadata_model_assessment::builders::ExportMetadataModelAssessmentOutputBuilder::default()
    }
}

/// A builder for [`ExportMetadataModelAssessmentOutput`](crate::operation::export_metadata_model_assessment::ExportMetadataModelAssessmentOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportMetadataModelAssessmentOutputBuilder {
    pub(crate) pdf_report: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>,
    pub(crate) csv_report: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>,
    _request_id: Option<String>,
}
impl ExportMetadataModelAssessmentOutputBuilder {
    /// <p>The Amazon S3 details for an assessment exported in PDF format.</p>
    pub fn pdf_report(mut self, input: crate::types::ExportMetadataModelAssessmentResultEntry) -> Self {
        self.pdf_report = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon S3 details for an assessment exported in PDF format.</p>
    pub fn set_pdf_report(mut self, input: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>) -> Self {
        self.pdf_report = input; self
    }
    /// <p>The Amazon S3 details for an assessment exported in PDF format.</p>
    pub fn get_pdf_report(&self) -> &::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry> {
        &self.pdf_report
    }
    /// <p>The Amazon S3 details for an assessment exported in CSV format.</p>
    pub fn csv_report(mut self, input: crate::types::ExportMetadataModelAssessmentResultEntry) -> Self {
        self.csv_report = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon S3 details for an assessment exported in CSV format.</p>
    pub fn set_csv_report(mut self, input: ::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry>) -> Self {
        self.csv_report = input; self
    }
    /// <p>The Amazon S3 details for an assessment exported in CSV format.</p>
    pub fn get_csv_report(&self) -> &::std::option::Option<crate::types::ExportMetadataModelAssessmentResultEntry> {
        &self.csv_report
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
                                    self._request_id = Some(request_id.into());
                                    self
                                }
    
                                pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
                                    self._request_id = request_id;
                                    self
                                }
    /// Consumes the builder and constructs a [`ExportMetadataModelAssessmentOutput`](crate::operation::export_metadata_model_assessment::ExportMetadataModelAssessmentOutput).
    pub fn build(self) -> crate::operation::export_metadata_model_assessment::ExportMetadataModelAssessmentOutput {
        crate::operation::export_metadata_model_assessment::ExportMetadataModelAssessmentOutput {
            pdf_report: self.pdf_report
            ,
            csv_report: self.csv_report
            ,
            _request_id: self._request_id,
        }
    }
}

