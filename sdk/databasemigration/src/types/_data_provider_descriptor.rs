// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a data provider.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataProviderDescriptor  {
    /// <p>The identifier of the Amazon Web Services Secrets Manager Secret used to store access credentials for the data provider.</p>
    pub secrets_manager_secret_id: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the role used to access Amazon Web Services Secrets Manager.</p>
    pub secrets_manager_access_role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The user-friendly name of the data provider.</p>
    pub data_provider_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the data provider.</p>
    pub data_provider_arn: ::std::option::Option<::std::string::String>,
}
impl  DataProviderDescriptor  {
    /// <p>The identifier of the Amazon Web Services Secrets Manager Secret used to store access credentials for the data provider.</p>
    pub fn secrets_manager_secret_id(&self) -> ::std::option::Option<& str> {
        self.secrets_manager_secret_id.as_deref()
    }
    /// <p>The ARN of the role used to access Amazon Web Services Secrets Manager.</p>
    pub fn secrets_manager_access_role_arn(&self) -> ::std::option::Option<& str> {
        self.secrets_manager_access_role_arn.as_deref()
    }
    /// <p>The user-friendly name of the data provider.</p>
    pub fn data_provider_name(&self) -> ::std::option::Option<& str> {
        self.data_provider_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the data provider.</p>
    pub fn data_provider_arn(&self) -> ::std::option::Option<& str> {
        self.data_provider_arn.as_deref()
    }
}
impl DataProviderDescriptor {
    /// Creates a new builder-style object to manufacture [`DataProviderDescriptor`](crate::types::DataProviderDescriptor).
    pub fn builder() -> crate::types::builders::DataProviderDescriptorBuilder {
        crate::types::builders::DataProviderDescriptorBuilder::default()
    }
}

/// A builder for [`DataProviderDescriptor`](crate::types::DataProviderDescriptor).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DataProviderDescriptorBuilder {
    pub(crate) secrets_manager_secret_id: ::std::option::Option<::std::string::String>,
    pub(crate) secrets_manager_access_role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) data_provider_name: ::std::option::Option<::std::string::String>,
    pub(crate) data_provider_arn: ::std::option::Option<::std::string::String>,
}
impl DataProviderDescriptorBuilder {
    /// <p>The identifier of the Amazon Web Services Secrets Manager Secret used to store access credentials for the data provider.</p>
    pub fn secrets_manager_secret_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secrets_manager_secret_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Web Services Secrets Manager Secret used to store access credentials for the data provider.</p>
    pub fn set_secrets_manager_secret_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secrets_manager_secret_id = input; self
    }
    /// <p>The identifier of the Amazon Web Services Secrets Manager Secret used to store access credentials for the data provider.</p>
    pub fn get_secrets_manager_secret_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.secrets_manager_secret_id
    }
    /// <p>The ARN of the role used to access Amazon Web Services Secrets Manager.</p>
    pub fn secrets_manager_access_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secrets_manager_access_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the role used to access Amazon Web Services Secrets Manager.</p>
    pub fn set_secrets_manager_access_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secrets_manager_access_role_arn = input; self
    }
    /// <p>The ARN of the role used to access Amazon Web Services Secrets Manager.</p>
    pub fn get_secrets_manager_access_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.secrets_manager_access_role_arn
    }
    /// <p>The user-friendly name of the data provider.</p>
    pub fn data_provider_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_provider_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user-friendly name of the data provider.</p>
    pub fn set_data_provider_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_provider_name = input; self
    }
    /// <p>The user-friendly name of the data provider.</p>
    pub fn get_data_provider_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_provider_name
    }
    /// <p>The Amazon Resource Name (ARN) of the data provider.</p>
    pub fn data_provider_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_provider_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the data provider.</p>
    pub fn set_data_provider_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_provider_arn = input; self
    }
    /// <p>The Amazon Resource Name (ARN) of the data provider.</p>
    pub fn get_data_provider_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_provider_arn
    }
    /// Consumes the builder and constructs a [`DataProviderDescriptor`](crate::types::DataProviderDescriptor).
    pub fn build(self) -> crate::types::DataProviderDescriptor {
        crate::types::DataProviderDescriptor {
            secrets_manager_secret_id: self.secrets_manager_secret_id
            ,
            secrets_manager_access_role_arn: self.secrets_manager_access_role_arn
            ,
            data_provider_name: self.data_provider_name
            ,
            data_provider_arn: self.data_provider_arn
            ,
        }
    }
}

