// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object where you specify the anticipated traffic pattern for an endpoint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScalingPolicyObjective  {
    /// <p>The minimum number of expected requests to your endpoint per minute.</p>
    pub min_invocations_per_minute: ::std::option::Option<i32>,
    /// <p>The maximum number of expected requests to your endpoint per minute.</p>
    pub max_invocations_per_minute: ::std::option::Option<i32>,
}
impl  ScalingPolicyObjective  {
    /// <p>The minimum number of expected requests to your endpoint per minute.</p>
    pub fn min_invocations_per_minute(&self) -> ::std::option::Option<i32> {
        self.min_invocations_per_minute
    }
    /// <p>The maximum number of expected requests to your endpoint per minute.</p>
    pub fn max_invocations_per_minute(&self) -> ::std::option::Option<i32> {
        self.max_invocations_per_minute
    }
}
impl ScalingPolicyObjective {
    /// Creates a new builder-style object to manufacture [`ScalingPolicyObjective`](crate::types::ScalingPolicyObjective).
    pub fn builder() -> crate::types::builders::ScalingPolicyObjectiveBuilder {
        crate::types::builders::ScalingPolicyObjectiveBuilder::default()
    }
}

/// A builder for [`ScalingPolicyObjective`](crate::types::ScalingPolicyObjective).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScalingPolicyObjectiveBuilder {
    pub(crate) min_invocations_per_minute: ::std::option::Option<i32>,
    pub(crate) max_invocations_per_minute: ::std::option::Option<i32>,
}
impl ScalingPolicyObjectiveBuilder {
    /// <p>The minimum number of expected requests to your endpoint per minute.</p>
    pub fn min_invocations_per_minute(mut self, input: i32) -> Self {
        self.min_invocations_per_minute = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum number of expected requests to your endpoint per minute.</p>
    pub fn set_min_invocations_per_minute(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min_invocations_per_minute = input; self
    }
    /// <p>The minimum number of expected requests to your endpoint per minute.</p>
    pub fn get_min_invocations_per_minute(&self) -> &::std::option::Option<i32> {
        &self.min_invocations_per_minute
    }
    /// <p>The maximum number of expected requests to your endpoint per minute.</p>
    pub fn max_invocations_per_minute(mut self, input: i32) -> Self {
        self.max_invocations_per_minute = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of expected requests to your endpoint per minute.</p>
    pub fn set_max_invocations_per_minute(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_invocations_per_minute = input; self
    }
    /// <p>The maximum number of expected requests to your endpoint per minute.</p>
    pub fn get_max_invocations_per_minute(&self) -> &::std::option::Option<i32> {
        &self.max_invocations_per_minute
    }
    /// Consumes the builder and constructs a [`ScalingPolicyObjective`](crate::types::ScalingPolicyObjective).
    pub fn build(self) -> crate::types::ScalingPolicyObjective {
        crate::types::ScalingPolicyObjective {
            min_invocations_per_minute: self.min_invocations_per_minute
            ,
            max_invocations_per_minute: self.max_invocations_per_minute
            ,
        }
    }
}

