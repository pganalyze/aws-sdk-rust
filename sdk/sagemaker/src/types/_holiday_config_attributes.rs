// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Stores the holiday featurization attributes applicable to each item of time-series datasets during the training of a forecasting model. This allows the model to identify patterns associated with specific holidays.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HolidayConfigAttributes  {
    /// <p>The country code for the holiday calendar.</p> 
    /// <p>For the list of public holiday calendars supported by AutoML job V2, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-timeseries-forecasting-holiday-calendars.html#holiday-country-codes">Country Codes</a>. Use the country code corresponding to the country of your choice.</p>
    pub country_code: ::std::option::Option<::std::string::String>,
}
impl  HolidayConfigAttributes  {
    /// <p>The country code for the holiday calendar.</p> 
    /// <p>For the list of public holiday calendars supported by AutoML job V2, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-timeseries-forecasting-holiday-calendars.html#holiday-country-codes">Country Codes</a>. Use the country code corresponding to the country of your choice.</p>
    pub fn country_code(&self) -> ::std::option::Option<& str> {
        self.country_code.as_deref()
    }
}
impl HolidayConfigAttributes {
    /// Creates a new builder-style object to manufacture [`HolidayConfigAttributes`](crate::types::HolidayConfigAttributes).
    pub fn builder() -> crate::types::builders::HolidayConfigAttributesBuilder {
        crate::types::builders::HolidayConfigAttributesBuilder::default()
    }
}

/// A builder for [`HolidayConfigAttributes`](crate::types::HolidayConfigAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HolidayConfigAttributesBuilder {
    pub(crate) country_code: ::std::option::Option<::std::string::String>,
}
impl HolidayConfigAttributesBuilder {
    /// <p>The country code for the holiday calendar.</p> 
    /// <p>For the list of public holiday calendars supported by AutoML job V2, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-timeseries-forecasting-holiday-calendars.html#holiday-country-codes">Country Codes</a>. Use the country code corresponding to the country of your choice.</p>
    pub fn country_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.country_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The country code for the holiday calendar.</p> 
    /// <p>For the list of public holiday calendars supported by AutoML job V2, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-timeseries-forecasting-holiday-calendars.html#holiday-country-codes">Country Codes</a>. Use the country code corresponding to the country of your choice.</p>
    pub fn set_country_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.country_code = input; self
    }
    /// <p>The country code for the holiday calendar.</p> 
    /// <p>For the list of public holiday calendars supported by AutoML job V2, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-timeseries-forecasting-holiday-calendars.html#holiday-country-codes">Country Codes</a>. Use the country code corresponding to the country of your choice.</p>
    pub fn get_country_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.country_code
    }
    /// Consumes the builder and constructs a [`HolidayConfigAttributes`](crate::types::HolidayConfigAttributes).
    pub fn build(self) -> crate::types::HolidayConfigAttributes {
        crate::types::HolidayConfigAttributes {
            country_code: self.country_code
            ,
        }
    }
}

