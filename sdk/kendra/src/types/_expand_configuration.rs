// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the configuration information needed to customize how collapsed search result groups expand.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExpandConfiguration  {
    /// <p>The number of collapsed search result groups to expand. If you set this value to 10, for example, only the first 10 out of 100 result groups will have expand functionality. </p>
    pub max_result_items_to_expand: ::std::option::Option<i32>,
    /// <p>The number of expanded results to show per collapsed primary document. For instance, if you set this value to 3, then at most 3 results per collapsed group will be displayed.</p>
    pub max_expanded_results_per_item: ::std::option::Option<i32>,
}
impl  ExpandConfiguration  {
    /// <p>The number of collapsed search result groups to expand. If you set this value to 10, for example, only the first 10 out of 100 result groups will have expand functionality. </p>
    pub fn max_result_items_to_expand(&self) -> ::std::option::Option<i32> {
        self.max_result_items_to_expand
    }
    /// <p>The number of expanded results to show per collapsed primary document. For instance, if you set this value to 3, then at most 3 results per collapsed group will be displayed.</p>
    pub fn max_expanded_results_per_item(&self) -> ::std::option::Option<i32> {
        self.max_expanded_results_per_item
    }
}
impl ExpandConfiguration {
    /// Creates a new builder-style object to manufacture [`ExpandConfiguration`](crate::types::ExpandConfiguration).
    pub fn builder() -> crate::types::builders::ExpandConfigurationBuilder {
        crate::types::builders::ExpandConfigurationBuilder::default()
    }
}

/// A builder for [`ExpandConfiguration`](crate::types::ExpandConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExpandConfigurationBuilder {
    pub(crate) max_result_items_to_expand: ::std::option::Option<i32>,
    pub(crate) max_expanded_results_per_item: ::std::option::Option<i32>,
}
impl ExpandConfigurationBuilder {
    /// <p>The number of collapsed search result groups to expand. If you set this value to 10, for example, only the first 10 out of 100 result groups will have expand functionality. </p>
    pub fn max_result_items_to_expand(mut self, input: i32) -> Self {
        self.max_result_items_to_expand = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of collapsed search result groups to expand. If you set this value to 10, for example, only the first 10 out of 100 result groups will have expand functionality. </p>
    pub fn set_max_result_items_to_expand(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_result_items_to_expand = input; self
    }
    /// <p>The number of collapsed search result groups to expand. If you set this value to 10, for example, only the first 10 out of 100 result groups will have expand functionality. </p>
    pub fn get_max_result_items_to_expand(&self) -> &::std::option::Option<i32> {
        &self.max_result_items_to_expand
    }
    /// <p>The number of expanded results to show per collapsed primary document. For instance, if you set this value to 3, then at most 3 results per collapsed group will be displayed.</p>
    pub fn max_expanded_results_per_item(mut self, input: i32) -> Self {
        self.max_expanded_results_per_item = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of expanded results to show per collapsed primary document. For instance, if you set this value to 3, then at most 3 results per collapsed group will be displayed.</p>
    pub fn set_max_expanded_results_per_item(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_expanded_results_per_item = input; self
    }
    /// <p>The number of expanded results to show per collapsed primary document. For instance, if you set this value to 3, then at most 3 results per collapsed group will be displayed.</p>
    pub fn get_max_expanded_results_per_item(&self) -> &::std::option::Option<i32> {
        &self.max_expanded_results_per_item
    }
    /// Consumes the builder and constructs a [`ExpandConfiguration`](crate::types::ExpandConfiguration).
    pub fn build(self) -> crate::types::ExpandConfiguration {
        crate::types::ExpandConfiguration {
            max_result_items_to_expand: self.max_result_items_to_expand
            ,
            max_expanded_results_per_item: self.max_expanded_results_per_item
            ,
        }
    }
}

