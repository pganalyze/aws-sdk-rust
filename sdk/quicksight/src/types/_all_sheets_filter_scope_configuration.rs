// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for applying a filter to all sheets. You can apply this filter to all visuals on every sheet.</p> 
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AllSheetsFilterScopeConfiguration  {
}
impl AllSheetsFilterScopeConfiguration {
    /// Creates a new builder-style object to manufacture [`AllSheetsFilterScopeConfiguration`](crate::types::AllSheetsFilterScopeConfiguration).
    pub fn builder() -> crate::types::builders::AllSheetsFilterScopeConfigurationBuilder {
        crate::types::builders::AllSheetsFilterScopeConfigurationBuilder::default()
    }
}

/// A builder for [`AllSheetsFilterScopeConfiguration`](crate::types::AllSheetsFilterScopeConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AllSheetsFilterScopeConfigurationBuilder {
}
impl AllSheetsFilterScopeConfigurationBuilder {
    /// Consumes the builder and constructs a [`AllSheetsFilterScopeConfiguration`](crate::types::AllSheetsFilterScopeConfiguration).
    pub fn build(self) -> crate::types::AllSheetsFilterScopeConfiguration {
        crate::types::AllSheetsFilterScopeConfiguration {
        }
    }
}

