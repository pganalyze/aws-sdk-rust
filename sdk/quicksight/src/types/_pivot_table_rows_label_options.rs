// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The options for the label thta is located above the row headers. This option is only applicable when <code>RowsLayout</code> is set to <code>HIERARCHY</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PivotTableRowsLabelOptions  {
    /// <p>The visibility of the rows label.</p>
    pub visibility: ::std::option::Option<crate::types::Visibility>,
    /// <p>The custom label string for the rows label.</p>
    pub custom_label: ::std::option::Option<::std::string::String>,
}
impl  PivotTableRowsLabelOptions  {
    /// <p>The visibility of the rows label.</p>
    pub fn visibility(&self) -> ::std::option::Option<& crate::types::Visibility> {
        self.visibility.as_ref()
    }
    /// <p>The custom label string for the rows label.</p>
    pub fn custom_label(&self) -> ::std::option::Option<& str> {
        self.custom_label.as_deref()
    }
}
impl PivotTableRowsLabelOptions {
    /// Creates a new builder-style object to manufacture [`PivotTableRowsLabelOptions`](crate::types::PivotTableRowsLabelOptions).
    pub fn builder() -> crate::types::builders::PivotTableRowsLabelOptionsBuilder {
        crate::types::builders::PivotTableRowsLabelOptionsBuilder::default()
    }
}

/// A builder for [`PivotTableRowsLabelOptions`](crate::types::PivotTableRowsLabelOptions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PivotTableRowsLabelOptionsBuilder {
    pub(crate) visibility: ::std::option::Option<crate::types::Visibility>,
    pub(crate) custom_label: ::std::option::Option<::std::string::String>,
}
impl PivotTableRowsLabelOptionsBuilder {
    /// <p>The visibility of the rows label.</p>
    pub fn visibility(mut self, input: crate::types::Visibility) -> Self {
        self.visibility = ::std::option::Option::Some(input);
        self
    }
    /// <p>The visibility of the rows label.</p>
    pub fn set_visibility(mut self, input: ::std::option::Option<crate::types::Visibility>) -> Self {
        self.visibility = input; self
    }
    /// <p>The visibility of the rows label.</p>
    pub fn get_visibility(&self) -> &::std::option::Option<crate::types::Visibility> {
        &self.visibility
    }
    /// <p>The custom label string for the rows label.</p>
    pub fn custom_label(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_label = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The custom label string for the rows label.</p>
    pub fn set_custom_label(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_label = input; self
    }
    /// <p>The custom label string for the rows label.</p>
    pub fn get_custom_label(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_label
    }
    /// Consumes the builder and constructs a [`PivotTableRowsLabelOptions`](crate::types::PivotTableRowsLabelOptions).
    pub fn build(self) -> crate::types::PivotTableRowsLabelOptions {
        crate::types::PivotTableRowsLabelOptions {
            visibility: self.visibility
            ,
            custom_label: self.custom_label
            ,
        }
    }
}

