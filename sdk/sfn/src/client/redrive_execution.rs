// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RedriveExecution`](crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`execution_arn(impl Into<String>)`](crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder::execution_arn) / [`set_execution_arn(Option<String>)`](crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder::set_execution_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the execution to be redriven.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency. The API uses one of the last 10 client tokens provided.</p><br>
                            /// - On success, responds with [`RedriveExecutionOutput`](crate::operation::redrive_execution::RedriveExecutionOutput) with field(s):
    ///   - [`redrive_date(DateTime)`](crate::operation::redrive_execution::RedriveExecutionOutput::redrive_date): <p>The date the execution was last redriven.</p>
                            /// - On failure, responds with [`SdkError<RedriveExecutionError>`](crate::operation::redrive_execution::RedriveExecutionError)
    pub fn redrive_execution(&self) -> crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder {
                                crate::operation::redrive_execution::builders::RedriveExecutionFluentBuilder::new(self.handle.clone())
                            }
}

