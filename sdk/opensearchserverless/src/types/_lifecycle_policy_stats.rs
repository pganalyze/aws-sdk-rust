// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics for an OpenSearch Serverless lifecycle policy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LifecyclePolicyStats  {
    /// <p>The number of retention lifecycle policies in the current account.</p>
    pub retention_policy_count: ::std::option::Option<i64>,
}
impl  LifecyclePolicyStats  {
    /// <p>The number of retention lifecycle policies in the current account.</p>
    pub fn retention_policy_count(&self) -> ::std::option::Option<i64> {
        self.retention_policy_count
    }
}
impl LifecyclePolicyStats {
    /// Creates a new builder-style object to manufacture [`LifecyclePolicyStats`](crate::types::LifecyclePolicyStats).
    pub fn builder() -> crate::types::builders::LifecyclePolicyStatsBuilder {
        crate::types::builders::LifecyclePolicyStatsBuilder::default()
    }
}

/// A builder for [`LifecyclePolicyStats`](crate::types::LifecyclePolicyStats).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LifecyclePolicyStatsBuilder {
    pub(crate) retention_policy_count: ::std::option::Option<i64>,
}
impl LifecyclePolicyStatsBuilder {
    /// <p>The number of retention lifecycle policies in the current account.</p>
    pub fn retention_policy_count(mut self, input: i64) -> Self {
        self.retention_policy_count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of retention lifecycle policies in the current account.</p>
    pub fn set_retention_policy_count(mut self, input: ::std::option::Option<i64>) -> Self {
        self.retention_policy_count = input; self
    }
    /// <p>The number of retention lifecycle policies in the current account.</p>
    pub fn get_retention_policy_count(&self) -> &::std::option::Option<i64> {
        &self.retention_policy_count
    }
    /// Consumes the builder and constructs a [`LifecyclePolicyStats`](crate::types::LifecyclePolicyStats).
    pub fn build(self) -> crate::types::LifecyclePolicyStats {
        crate::types::LifecyclePolicyStats {
            retention_policy_count: self.retention_policy_count
            ,
        }
    }
}

