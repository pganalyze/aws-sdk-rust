// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The metric for the validator.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ValidatorMetric  {
    /// <p>The validation loss associated with this validator.</p>
    pub validation_loss: ::std::option::Option<f32>,
}
impl  ValidatorMetric  {
    /// <p>The validation loss associated with this validator.</p>
    pub fn validation_loss(&self) -> ::std::option::Option<f32> {
        self.validation_loss
    }
}
impl ValidatorMetric {
    /// Creates a new builder-style object to manufacture [`ValidatorMetric`](crate::types::ValidatorMetric).
    pub fn builder() -> crate::types::builders::ValidatorMetricBuilder {
        crate::types::builders::ValidatorMetricBuilder::default()
    }
}

/// A builder for [`ValidatorMetric`](crate::types::ValidatorMetric).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ValidatorMetricBuilder {
    pub(crate) validation_loss: ::std::option::Option<f32>,
}
impl ValidatorMetricBuilder {
    /// <p>The validation loss associated with this validator.</p>
    pub fn validation_loss(mut self, input: f32) -> Self {
        self.validation_loss = ::std::option::Option::Some(input);
        self
    }
    /// <p>The validation loss associated with this validator.</p>
    pub fn set_validation_loss(mut self, input: ::std::option::Option<f32>) -> Self {
        self.validation_loss = input; self
    }
    /// <p>The validation loss associated with this validator.</p>
    pub fn get_validation_loss(&self) -> &::std::option::Option<f32> {
        &self.validation_loss
    }
    /// Consumes the builder and constructs a [`ValidatorMetric`](crate::types::ValidatorMetric).
    pub fn build(self) -> crate::types::ValidatorMetric {
        crate::types::ValidatorMetric {
            validation_loss: self.validation_loss
            ,
        }
    }
}

