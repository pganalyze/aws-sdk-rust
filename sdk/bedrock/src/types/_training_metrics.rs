// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Metrics associated with the custom job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrainingMetrics  {
    /// <p>Loss metric associated with the custom job.</p>
    pub training_loss: ::std::option::Option<f32>,
}
impl  TrainingMetrics  {
    /// <p>Loss metric associated with the custom job.</p>
    pub fn training_loss(&self) -> ::std::option::Option<f32> {
        self.training_loss
    }
}
impl TrainingMetrics {
    /// Creates a new builder-style object to manufacture [`TrainingMetrics`](crate::types::TrainingMetrics).
    pub fn builder() -> crate::types::builders::TrainingMetricsBuilder {
        crate::types::builders::TrainingMetricsBuilder::default()
    }
}

/// A builder for [`TrainingMetrics`](crate::types::TrainingMetrics).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TrainingMetricsBuilder {
    pub(crate) training_loss: ::std::option::Option<f32>,
}
impl TrainingMetricsBuilder {
    /// <p>Loss metric associated with the custom job.</p>
    pub fn training_loss(mut self, input: f32) -> Self {
        self.training_loss = ::std::option::Option::Some(input);
        self
    }
    /// <p>Loss metric associated with the custom job.</p>
    pub fn set_training_loss(mut self, input: ::std::option::Option<f32>) -> Self {
        self.training_loss = input; self
    }
    /// <p>Loss metric associated with the custom job.</p>
    pub fn get_training_loss(&self) -> &::std::option::Option<f32> {
        &self.training_loss
    }
    /// Consumes the builder and constructs a [`TrainingMetrics`](crate::types::TrainingMetrics).
    pub fn build(self) -> crate::types::TrainingMetrics {
        crate::types::TrainingMetrics {
            training_loss: self.training_loss
            ,
        }
    }
}

