// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains status components of a Gremlin query.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GremlinQueryStatusAttributes  {
    /// <p>The status message.</p>
    pub message: ::std::option::Option<::std::string::String>,
    /// <p>The HTTP response code returned fro the Gremlin query request..</p>
    pub code: ::std::option::Option<i32>,
    /// <p>Attributes of the Gremlin query status.</p>
    pub attributes: ::std::option::Option<::aws_smithy_types::Document>,
}
impl  GremlinQueryStatusAttributes  {
    /// <p>The status message.</p>
    pub fn message(&self) -> ::std::option::Option<& str> {
        self.message.as_deref()
    }
    /// <p>The HTTP response code returned fro the Gremlin query request..</p>
    pub fn code(&self) -> ::std::option::Option<i32> {
        self.code
    }
    /// <p>Attributes of the Gremlin query status.</p>
    pub fn attributes(&self) -> ::std::option::Option<& ::aws_smithy_types::Document> {
        self.attributes.as_ref()
    }
}
impl GremlinQueryStatusAttributes {
    /// Creates a new builder-style object to manufacture [`GremlinQueryStatusAttributes`](crate::types::GremlinQueryStatusAttributes).
    pub fn builder() -> crate::types::builders::GremlinQueryStatusAttributesBuilder {
        crate::types::builders::GremlinQueryStatusAttributesBuilder::default()
    }
}

/// A builder for [`GremlinQueryStatusAttributes`](crate::types::GremlinQueryStatusAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GremlinQueryStatusAttributesBuilder {
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) code: ::std::option::Option<i32>,
    pub(crate) attributes: ::std::option::Option<::aws_smithy_types::Document>,
}
impl GremlinQueryStatusAttributesBuilder {
    /// <p>The status message.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status message.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input; self
    }
    /// <p>The status message.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// <p>The HTTP response code returned fro the Gremlin query request..</p>
    pub fn code(mut self, input: i32) -> Self {
        self.code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The HTTP response code returned fro the Gremlin query request..</p>
    pub fn set_code(mut self, input: ::std::option::Option<i32>) -> Self {
        self.code = input; self
    }
    /// <p>The HTTP response code returned fro the Gremlin query request..</p>
    pub fn get_code(&self) -> &::std::option::Option<i32> {
        &self.code
    }
    /// <p>Attributes of the Gremlin query status.</p>
    pub fn attributes(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.attributes = ::std::option::Option::Some(input);
        self
    }
    /// <p>Attributes of the Gremlin query status.</p>
    pub fn set_attributes(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.attributes = input; self
    }
    /// <p>Attributes of the Gremlin query status.</p>
    pub fn get_attributes(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.attributes
    }
    /// Consumes the builder and constructs a [`GremlinQueryStatusAttributes`](crate::types::GremlinQueryStatusAttributes).
    pub fn build(self) -> crate::types::GremlinQueryStatusAttributes {
        crate::types::GremlinQueryStatusAttributes {
            message: self.message
            ,
            code: self.code
            ,
            attributes: self.attributes
            ,
        }
    }
}

