// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics for <code>REFRESH</code> mode.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RefreshStatisticsIdMap  {
    /// <p>The ID of the statistics generation run that is currently occurring.</p>
    pub statistics_id: ::std::option::Option<::std::string::String>,
}
impl  RefreshStatisticsIdMap  {
    /// <p>The ID of the statistics generation run that is currently occurring.</p>
    pub fn statistics_id(&self) -> ::std::option::Option<& str> {
        self.statistics_id.as_deref()
    }
}
impl RefreshStatisticsIdMap {
    /// Creates a new builder-style object to manufacture [`RefreshStatisticsIdMap`](crate::types::RefreshStatisticsIdMap).
    pub fn builder() -> crate::types::builders::RefreshStatisticsIdMapBuilder {
        crate::types::builders::RefreshStatisticsIdMapBuilder::default()
    }
}

/// A builder for [`RefreshStatisticsIdMap`](crate::types::RefreshStatisticsIdMap).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RefreshStatisticsIdMapBuilder {
    pub(crate) statistics_id: ::std::option::Option<::std::string::String>,
}
impl RefreshStatisticsIdMapBuilder {
    /// <p>The ID of the statistics generation run that is currently occurring.</p>
    pub fn statistics_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.statistics_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the statistics generation run that is currently occurring.</p>
    pub fn set_statistics_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.statistics_id = input; self
    }
    /// <p>The ID of the statistics generation run that is currently occurring.</p>
    pub fn get_statistics_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.statistics_id
    }
    /// Consumes the builder and constructs a [`RefreshStatisticsIdMap`](crate::types::RefreshStatisticsIdMap).
    pub fn build(self) -> crate::types::RefreshStatisticsIdMap {
        crate::types::RefreshStatisticsIdMap {
            statistics_id: self.statistics_id
            ,
        }
    }
}

