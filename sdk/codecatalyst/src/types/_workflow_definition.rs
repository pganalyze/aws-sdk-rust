// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a workflow definition file.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkflowDefinition  {
    /// <p>The path to the workflow definition file stored in the source repository for the project, including the file name.</p>
    pub path: ::std::string::String,
}
impl  WorkflowDefinition  {
    /// <p>The path to the workflow definition file stored in the source repository for the project, including the file name.</p>
    pub fn path(&self) -> & str {
        use std::ops::Deref; self.path.deref()
    }
}
impl WorkflowDefinition {
    /// Creates a new builder-style object to manufacture [`WorkflowDefinition`](crate::types::WorkflowDefinition).
    pub fn builder() -> crate::types::builders::WorkflowDefinitionBuilder {
        crate::types::builders::WorkflowDefinitionBuilder::default()
    }
}

/// A builder for [`WorkflowDefinition`](crate::types::WorkflowDefinition).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkflowDefinitionBuilder {
    pub(crate) path: ::std::option::Option<::std::string::String>,
}
impl WorkflowDefinitionBuilder {
    /// <p>The path to the workflow definition file stored in the source repository for the project, including the file name.</p>
    /// This field is required.
    pub fn path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path to the workflow definition file stored in the source repository for the project, including the file name.</p>
    pub fn set_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.path = input; self
    }
    /// <p>The path to the workflow definition file stored in the source repository for the project, including the file name.</p>
    pub fn get_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.path
    }
    /// Consumes the builder and constructs a [`WorkflowDefinition`](crate::types::WorkflowDefinition).
    /// This method will fail if any of the following fields are not set:
    /// - [`path`](crate::types::builders::WorkflowDefinitionBuilder::path)
    pub fn build(self) -> ::std::result::Result<crate::types::WorkflowDefinition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::types::WorkflowDefinition {
                path: self.path
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("path", "path was not specified but it is required when building WorkflowDefinition")
                    )?
                ,
            }
        )
    }
}

