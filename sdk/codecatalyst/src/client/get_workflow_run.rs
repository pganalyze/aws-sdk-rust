// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetWorkflowRun`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`space_name(impl Into<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::space_name) / [`set_space_name(Option<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::set_space_name):<br>required: **true**<br><p>The name of the space.</p><br>
    ///   - [`id(impl Into<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the workflow run. To retrieve a list of workflow run IDs, use <code>ListWorkflowRuns</code>.</p><br>
    ///   - [`project_name(impl Into<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::project_name) / [`set_project_name(Option<String>)`](crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::set_project_name):<br>required: **true**<br><p>The name of the project in the space.</p><br>
                            /// - On success, responds with [`GetWorkflowRunOutput`](crate::operation::get_workflow_run::GetWorkflowRunOutput) with field(s):
    ///   - [`space_name(String)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::space_name): <p>The name of the space.</p>
    ///   - [`project_name(String)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::project_name): <p>The name of the project in the space.</p>
    ///   - [`id(String)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::id): <p>The ID of the workflow run.</p>
    ///   - [`workflow_id(String)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::workflow_id): <p>The ID of the workflow.</p>
    ///   - [`status(WorkflowRunStatus)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::status): <p>The status of the workflow run.</p>
    ///   - [`status_reasons(Option<Vec::<WorkflowRunStatusReason>>)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::status_reasons): <p>Information about the reasons for the status of the workflow run.</p>
    ///   - [`start_time(DateTime)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::start_time): <p>The date and time the workflow run began, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a> </p>
    ///   - [`end_time(Option<DateTime>)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::end_time): <p>The date and time the workflow run ended, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    ///   - [`last_updated_time(DateTime)`](crate::operation::get_workflow_run::GetWorkflowRunOutput::last_updated_time): <p>The date and time the workflow run status was last updated, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a> </p>
                            /// - On failure, responds with [`SdkError<GetWorkflowRunError>`](crate::operation::get_workflow_run::GetWorkflowRunError)
    pub fn get_workflow_run(&self) -> crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder {
                                crate::operation::get_workflow_run::builders::GetWorkflowRunFluentBuilder::new(self.handle.clone())
                            }
}

