// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartWorkflowRun`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`space_name(impl Into<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::space_name) / [`set_space_name(Option<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::set_space_name):<br>required: **true**<br><p>The name of the space.</p><br>
    ///   - [`project_name(impl Into<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::project_name) / [`set_project_name(Option<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::set_project_name):<br>required: **true**<br><p>The name of the project in the space.</p><br>
    ///   - [`workflow_id(impl Into<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::workflow_id) / [`set_workflow_id(Option<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::set_workflow_id):<br>required: **true**<br><p>The system-generated unique ID of the workflow. To retrieve a list of workflow IDs, use <code>ListWorkflows</code>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::set_client_token):<br>required: **false**<br><p>A user-specified idempotency token. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries return the result from the original successful request and have no additional effect.</p><br>
                            /// - On success, responds with [`StartWorkflowRunOutput`](crate::operation::start_workflow_run::StartWorkflowRunOutput) with field(s):
    ///   - [`space_name(String)`](crate::operation::start_workflow_run::StartWorkflowRunOutput::space_name): <p>The name of the space.</p>
    ///   - [`project_name(String)`](crate::operation::start_workflow_run::StartWorkflowRunOutput::project_name): <p>The name of the project in the space.</p>
    ///   - [`id(String)`](crate::operation::start_workflow_run::StartWorkflowRunOutput::id): <p>The system-generated unique ID of the workflow run.</p>
    ///   - [`workflow_id(String)`](crate::operation::start_workflow_run::StartWorkflowRunOutput::workflow_id): <p>The system-generated unique ID of the workflow.</p>
                            /// - On failure, responds with [`SdkError<StartWorkflowRunError>`](crate::operation::start_workflow_run::StartWorkflowRunError)
    pub fn start_workflow_run(&self) -> crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder {
                                crate::operation::start_workflow_run::builders::StartWorkflowRunFluentBuilder::new(self.handle.clone())
                            }
}

