// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of the prediction.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PredictionConfiguration  {
    /// <p>The business name generation mechanism.</p>
    pub business_name_generation: ::std::option::Option<crate::types::BusinessNameGenerationConfiguration>,
}
impl  PredictionConfiguration  {
    /// <p>The business name generation mechanism.</p>
    pub fn business_name_generation(&self) -> ::std::option::Option<& crate::types::BusinessNameGenerationConfiguration> {
        self.business_name_generation.as_ref()
    }
}
impl PredictionConfiguration {
    /// Creates a new builder-style object to manufacture [`PredictionConfiguration`](crate::types::PredictionConfiguration).
    pub fn builder() -> crate::types::builders::PredictionConfigurationBuilder {
        crate::types::builders::PredictionConfigurationBuilder::default()
    }
}

/// A builder for [`PredictionConfiguration`](crate::types::PredictionConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PredictionConfigurationBuilder {
    pub(crate) business_name_generation: ::std::option::Option<crate::types::BusinessNameGenerationConfiguration>,
}
impl PredictionConfigurationBuilder {
    /// <p>The business name generation mechanism.</p>
    pub fn business_name_generation(mut self, input: crate::types::BusinessNameGenerationConfiguration) -> Self {
        self.business_name_generation = ::std::option::Option::Some(input);
        self
    }
    /// <p>The business name generation mechanism.</p>
    pub fn set_business_name_generation(mut self, input: ::std::option::Option<crate::types::BusinessNameGenerationConfiguration>) -> Self {
        self.business_name_generation = input; self
    }
    /// <p>The business name generation mechanism.</p>
    pub fn get_business_name_generation(&self) -> &::std::option::Option<crate::types::BusinessNameGenerationConfiguration> {
        &self.business_name_generation
    }
    /// Consumes the builder and constructs a [`PredictionConfiguration`](crate::types::PredictionConfiguration).
    pub fn build(self) -> crate::types::PredictionConfiguration {
        crate::types::PredictionConfiguration {
            business_name_generation: self.business_name_generation
            ,
        }
    }
}

