// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The deployment properties of the Amazon DataZone blueprint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeploymentProperties  {
    /// <p>The start timeout of the environment blueprint deployment.</p>
    pub start_timeout_minutes: ::std::option::Option<i32>,
    /// <p>The end timeout of the environment blueprint deployment.</p>
    pub end_timeout_minutes: ::std::option::Option<i32>,
}
impl  DeploymentProperties  {
    /// <p>The start timeout of the environment blueprint deployment.</p>
    pub fn start_timeout_minutes(&self) -> ::std::option::Option<i32> {
        self.start_timeout_minutes
    }
    /// <p>The end timeout of the environment blueprint deployment.</p>
    pub fn end_timeout_minutes(&self) -> ::std::option::Option<i32> {
        self.end_timeout_minutes
    }
}
impl DeploymentProperties {
    /// Creates a new builder-style object to manufacture [`DeploymentProperties`](crate::types::DeploymentProperties).
    pub fn builder() -> crate::types::builders::DeploymentPropertiesBuilder {
        crate::types::builders::DeploymentPropertiesBuilder::default()
    }
}

/// A builder for [`DeploymentProperties`](crate::types::DeploymentProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeploymentPropertiesBuilder {
    pub(crate) start_timeout_minutes: ::std::option::Option<i32>,
    pub(crate) end_timeout_minutes: ::std::option::Option<i32>,
}
impl DeploymentPropertiesBuilder {
    /// <p>The start timeout of the environment blueprint deployment.</p>
    pub fn start_timeout_minutes(mut self, input: i32) -> Self {
        self.start_timeout_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start timeout of the environment blueprint deployment.</p>
    pub fn set_start_timeout_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.start_timeout_minutes = input; self
    }
    /// <p>The start timeout of the environment blueprint deployment.</p>
    pub fn get_start_timeout_minutes(&self) -> &::std::option::Option<i32> {
        &self.start_timeout_minutes
    }
    /// <p>The end timeout of the environment blueprint deployment.</p>
    pub fn end_timeout_minutes(mut self, input: i32) -> Self {
        self.end_timeout_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The end timeout of the environment blueprint deployment.</p>
    pub fn set_end_timeout_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.end_timeout_minutes = input; self
    }
    /// <p>The end timeout of the environment blueprint deployment.</p>
    pub fn get_end_timeout_minutes(&self) -> &::std::option::Option<i32> {
        &self.end_timeout_minutes
    }
    /// Consumes the builder and constructs a [`DeploymentProperties`](crate::types::DeploymentProperties).
    pub fn build(self) -> crate::types::DeploymentProperties {
        crate::types::DeploymentProperties {
            start_timeout_minutes: self.start_timeout_minutes
            ,
            end_timeout_minutes: self.end_timeout_minutes
            ,
        }
    }
}

