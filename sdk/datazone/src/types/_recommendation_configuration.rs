// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RecommendationConfiguration  {
    /// <p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>
    pub enable_business_name_generation: ::std::option::Option<bool>,
}
impl  RecommendationConfiguration  {
    /// <p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>
    pub fn enable_business_name_generation(&self) -> ::std::option::Option<bool> {
        self.enable_business_name_generation
    }
}
impl RecommendationConfiguration {
    /// Creates a new builder-style object to manufacture [`RecommendationConfiguration`](crate::types::RecommendationConfiguration).
    pub fn builder() -> crate::types::builders::RecommendationConfigurationBuilder {
        crate::types::builders::RecommendationConfigurationBuilder::default()
    }
}

/// A builder for [`RecommendationConfiguration`](crate::types::RecommendationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RecommendationConfigurationBuilder {
    pub(crate) enable_business_name_generation: ::std::option::Option<bool>,
}
impl RecommendationConfigurationBuilder {
    /// <p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>
    pub fn enable_business_name_generation(mut self, input: bool) -> Self {
        self.enable_business_name_generation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>
    pub fn set_enable_business_name_generation(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_business_name_generation = input; self
    }
    /// <p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>
    pub fn get_enable_business_name_generation(&self) -> &::std::option::Option<bool> {
        &self.enable_business_name_generation
    }
    /// Consumes the builder and constructs a [`RecommendationConfiguration`](crate::types::RecommendationConfiguration).
    pub fn build(self) -> crate::types::RecommendationConfiguration {
        crate::types::RecommendationConfiguration {
            enable_business_name_generation: self.enable_business_name_generation
            ,
        }
    }
}

