// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of the results of the <code>SearchListings</code> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum SearchResultItem {
    /// <p>The asset listing included in the results of the <code>SearchListings</code> action.</p>
    AssetListing(crate::types::AssetListingItem),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl SearchResultItem {
    #[allow(irrefutable_let_patterns)]
    /// Tries to convert the enum instance into [`AssetListing`](crate::types::SearchResultItem::AssetListing), extracting the inner [`AssetListingItem`](crate::types::AssetListingItem).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_asset_listing(&self) -> ::std::result::Result<&crate::types::AssetListingItem, &Self> {
        if let SearchResultItem::AssetListing(val) = &self { ::std::result::Result::Ok(val) } else { ::std::result::Result::Err(self) }
    }
    /// Returns true if this is a [`AssetListing`](crate::types::SearchResultItem::AssetListing).
    pub fn is_asset_listing(&self) -> bool {
        self.as_asset_listing().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}

