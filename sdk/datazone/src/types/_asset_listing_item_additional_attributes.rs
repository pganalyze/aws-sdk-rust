// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional attributes of an inventory asset.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetListingItemAdditionalAttributes  {
    /// <p>The metadata forms that form additional attributes of the metadata asset.</p>
    pub forms: ::std::option::Option<::std::string::String>,
}
impl  AssetListingItemAdditionalAttributes  {
    /// <p>The metadata forms that form additional attributes of the metadata asset.</p>
    pub fn forms(&self) -> ::std::option::Option<& str> {
        self.forms.as_deref()
    }
}
impl AssetListingItemAdditionalAttributes {
    /// Creates a new builder-style object to manufacture [`AssetListingItemAdditionalAttributes`](crate::types::AssetListingItemAdditionalAttributes).
    pub fn builder() -> crate::types::builders::AssetListingItemAdditionalAttributesBuilder {
        crate::types::builders::AssetListingItemAdditionalAttributesBuilder::default()
    }
}

/// A builder for [`AssetListingItemAdditionalAttributes`](crate::types::AssetListingItemAdditionalAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetListingItemAdditionalAttributesBuilder {
    pub(crate) forms: ::std::option::Option<::std::string::String>,
}
impl AssetListingItemAdditionalAttributesBuilder {
    /// <p>The metadata forms that form additional attributes of the metadata asset.</p>
    pub fn forms(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.forms = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metadata forms that form additional attributes of the metadata asset.</p>
    pub fn set_forms(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.forms = input; self
    }
    /// <p>The metadata forms that form additional attributes of the metadata asset.</p>
    pub fn get_forms(&self) -> &::std::option::Option<::std::string::String> {
        &self.forms
    }
    /// Consumes the builder and constructs a [`AssetListingItemAdditionalAttributes`](crate::types::AssetListingItemAdditionalAttributes).
    pub fn build(self) -> crate::types::AssetListingItemAdditionalAttributes {
        crate::types::AssetListingItemAdditionalAttributes {
            forms: self.forms
            ,
        }
    }
}

