// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Request for which contact was successfully created.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SuccessfulRequest  {
    /// <p>Request identifier provided in the API call in the ContactDataRequest to create a contact.</p>
    pub request_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The contactId of the contact that was created successfully.</p>
    pub contact_id: ::std::option::Option<::std::string::String>,
}
impl  SuccessfulRequest  {
    /// <p>Request identifier provided in the API call in the ContactDataRequest to create a contact.</p>
    pub fn request_identifier(&self) -> ::std::option::Option<& str> {
        self.request_identifier.as_deref()
    }
    /// <p>The contactId of the contact that was created successfully.</p>
    pub fn contact_id(&self) -> ::std::option::Option<& str> {
        self.contact_id.as_deref()
    }
}
impl SuccessfulRequest {
    /// Creates a new builder-style object to manufacture [`SuccessfulRequest`](crate::types::SuccessfulRequest).
    pub fn builder() -> crate::types::builders::SuccessfulRequestBuilder {
        crate::types::builders::SuccessfulRequestBuilder::default()
    }
}

/// A builder for [`SuccessfulRequest`](crate::types::SuccessfulRequest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SuccessfulRequestBuilder {
    pub(crate) request_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) contact_id: ::std::option::Option<::std::string::String>,
}
impl SuccessfulRequestBuilder {
    /// <p>Request identifier provided in the API call in the ContactDataRequest to create a contact.</p>
    pub fn request_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.request_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Request identifier provided in the API call in the ContactDataRequest to create a contact.</p>
    pub fn set_request_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.request_identifier = input; self
    }
    /// <p>Request identifier provided in the API call in the ContactDataRequest to create a contact.</p>
    pub fn get_request_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.request_identifier
    }
    /// <p>The contactId of the contact that was created successfully.</p>
    pub fn contact_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.contact_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The contactId of the contact that was created successfully.</p>
    pub fn set_contact_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.contact_id = input; self
    }
    /// <p>The contactId of the contact that was created successfully.</p>
    pub fn get_contact_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.contact_id
    }
    /// Consumes the builder and constructs a [`SuccessfulRequest`](crate::types::SuccessfulRequest).
    pub fn build(self) -> crate::types::SuccessfulRequest {
        crate::types::SuccessfulRequest {
            request_identifier: self.request_identifier
            ,
            contact_id: self.contact_id
            ,
        }
    }
}

