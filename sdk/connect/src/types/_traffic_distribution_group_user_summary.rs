// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about a traffic distribution group user.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrafficDistributionGroupUserSummary  {
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub user_id: ::std::option::Option<::std::string::String>,
}
impl  TrafficDistributionGroupUserSummary  {
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn user_id(&self) -> ::std::option::Option<& str> {
        self.user_id.as_deref()
    }
}
impl TrafficDistributionGroupUserSummary {
    /// Creates a new builder-style object to manufacture [`TrafficDistributionGroupUserSummary`](crate::types::TrafficDistributionGroupUserSummary).
    pub fn builder() -> crate::types::builders::TrafficDistributionGroupUserSummaryBuilder {
        crate::types::builders::TrafficDistributionGroupUserSummaryBuilder::default()
    }
}

/// A builder for [`TrafficDistributionGroupUserSummary`](crate::types::TrafficDistributionGroupUserSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TrafficDistributionGroupUserSummaryBuilder {
    pub(crate) user_id: ::std::option::Option<::std::string::String>,
}
impl TrafficDistributionGroupUserSummaryBuilder {
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn user_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn set_user_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_id = input; self
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn get_user_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_id
    }
    /// Consumes the builder and constructs a [`TrafficDistributionGroupUserSummary`](crate::types::TrafficDistributionGroupUserSummary).
    pub fn build(self) -> crate::types::TrafficDistributionGroupUserSummary {
        crate::types::TrafficDistributionGroupUserSummary {
            user_id: self.user_id
            ,
        }
    }
}

