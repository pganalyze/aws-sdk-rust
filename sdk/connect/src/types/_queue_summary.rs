// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about a queue.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueueSummary  {
    /// <p>The identifier of the queue.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the queue.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The type of queue.</p>
    pub queue_type: ::std::option::Option<crate::types::QueueType>,
    /// <p>The timestamp when this resource was last modified.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Amazon Web Services Region where this resource was last modified.</p>
    pub last_modified_region: ::std::option::Option<::std::string::String>,
}
impl  QueueSummary  {
    /// <p>The identifier of the queue.</p>
    pub fn id(&self) -> ::std::option::Option<& str> {
        self.id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn arn(&self) -> ::std::option::Option<& str> {
        self.arn.as_deref()
    }
    /// <p>The name of the queue.</p>
    pub fn name(&self) -> ::std::option::Option<& str> {
        self.name.as_deref()
    }
    /// <p>The type of queue.</p>
    pub fn queue_type(&self) -> ::std::option::Option<& crate::types::QueueType> {
        self.queue_type.as_ref()
    }
    /// <p>The timestamp when this resource was last modified.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The Amazon Web Services Region where this resource was last modified.</p>
    pub fn last_modified_region(&self) -> ::std::option::Option<& str> {
        self.last_modified_region.as_deref()
    }
}
impl QueueSummary {
    /// Creates a new builder-style object to manufacture [`QueueSummary`](crate::types::QueueSummary).
    pub fn builder() -> crate::types::builders::QueueSummaryBuilder {
        crate::types::builders::QueueSummaryBuilder::default()
    }
}

/// A builder for [`QueueSummary`](crate::types::QueueSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct QueueSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) queue_type: ::std::option::Option<crate::types::QueueType>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_region: ::std::option::Option<::std::string::String>,
}
impl QueueSummaryBuilder {
    /// <p>The identifier of the queue.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the queue.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input; self
    }
    /// <p>The identifier of the queue.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input; self
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the queue.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the queue.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input; self
    }
    /// <p>The name of the queue.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The type of queue.</p>
    pub fn queue_type(mut self, input: crate::types::QueueType) -> Self {
        self.queue_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of queue.</p>
    pub fn set_queue_type(mut self, input: ::std::option::Option<crate::types::QueueType>) -> Self {
        self.queue_type = input; self
    }
    /// <p>The type of queue.</p>
    pub fn get_queue_type(&self) -> &::std::option::Option<crate::types::QueueType> {
        &self.queue_type
    }
    /// <p>The timestamp when this resource was last modified.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when this resource was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input; self
    }
    /// <p>The timestamp when this resource was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The Amazon Web Services Region where this resource was last modified.</p>
    pub fn last_modified_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_modified_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region where this resource was last modified.</p>
    pub fn set_last_modified_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_modified_region = input; self
    }
    /// <p>The Amazon Web Services Region where this resource was last modified.</p>
    pub fn get_last_modified_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_modified_region
    }
    /// Consumes the builder and constructs a [`QueueSummary`](crate::types::QueueSummary).
    pub fn build(self) -> crate::types::QueueSummary {
        crate::types::QueueSummary {
            id: self.id
            ,
            arn: self.arn
            ,
            name: self.name
            ,
            queue_type: self.queue_type
            ,
            last_modified_time: self.last_modified_time
            ,
            last_modified_region: self.last_modified_region
            ,
        }
    }
}

