// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Kubernetes role name and role type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KubernetesRoleDetails  {
    /// <p>The kind of role. For this API, the value of <code>kind</code> will be <code>Role</code>.</p>
    pub kind: ::std::option::Option<::std::string::String>,
    /// <p>The name of the Kubernetes role.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the Kubernetes role name.</p>
    pub uid: ::std::option::Option<::std::string::String>,
}
impl  KubernetesRoleDetails  {
    /// <p>The kind of role. For this API, the value of <code>kind</code> will be <code>Role</code>.</p>
    pub fn kind(&self) -> ::std::option::Option<& str> {
        self.kind.as_deref()
    }
    /// <p>The name of the Kubernetes role.</p>
    pub fn name(&self) -> ::std::option::Option<& str> {
        self.name.as_deref()
    }
    /// <p>The unique identifier of the Kubernetes role name.</p>
    pub fn uid(&self) -> ::std::option::Option<& str> {
        self.uid.as_deref()
    }
}
impl KubernetesRoleDetails {
    /// Creates a new builder-style object to manufacture [`KubernetesRoleDetails`](crate::types::KubernetesRoleDetails).
    pub fn builder() -> crate::types::builders::KubernetesRoleDetailsBuilder {
        crate::types::builders::KubernetesRoleDetailsBuilder::default()
    }
}

/// A builder for [`KubernetesRoleDetails`](crate::types::KubernetesRoleDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KubernetesRoleDetailsBuilder {
    pub(crate) kind: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) uid: ::std::option::Option<::std::string::String>,
}
impl KubernetesRoleDetailsBuilder {
    /// <p>The kind of role. For this API, the value of <code>kind</code> will be <code>Role</code>.</p>
    pub fn kind(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kind = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The kind of role. For this API, the value of <code>kind</code> will be <code>Role</code>.</p>
    pub fn set_kind(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kind = input; self
    }
    /// <p>The kind of role. For this API, the value of <code>kind</code> will be <code>Role</code>.</p>
    pub fn get_kind(&self) -> &::std::option::Option<::std::string::String> {
        &self.kind
    }
    /// <p>The name of the Kubernetes role.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Kubernetes role.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input; self
    }
    /// <p>The name of the Kubernetes role.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The unique identifier of the Kubernetes role name.</p>
    pub fn uid(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.uid = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Kubernetes role name.</p>
    pub fn set_uid(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.uid = input; self
    }
    /// <p>The unique identifier of the Kubernetes role name.</p>
    pub fn get_uid(&self) -> &::std::option::Option<::std::string::String> {
        &self.uid
    }
    /// Consumes the builder and constructs a [`KubernetesRoleDetails`](crate::types::KubernetesRoleDetails).
    pub fn build(self) -> crate::types::KubernetesRoleDetails {
        crate::types::KubernetesRoleDetails {
            kind: self.kind
            ,
            name: self.name
            ,
            uid: self.uid
            ,
        }
    }
}

